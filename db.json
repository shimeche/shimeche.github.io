{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","path":"vendors/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","path":"vendors/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.gitignore","hash":"efec790f5b7a0256763e1cc08f12c4f0aff509f6","modified":1492068660342},{"_id":"themes/next/.bowerrc","hash":"80e096fdc1cf912ee85dd9f7e6e77fd40cf60f10","modified":1492068660554},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1492068660730},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1492068660558},{"_id":"themes/next/README.en.md","hash":"565ba52b3825b85a9f05b41183caca7f18b741d4","modified":1492068660558},{"_id":"themes/next/_config.yml","hash":"387c17858bf2065469eae850e34a551d69e9bfff","modified":1466668731387},{"_id":"themes/next/bower.json","hash":"f89c6700a11d81e067cc97273ca6bf96cb88c8f9","modified":1492068660986},{"_id":"themes/next/gulpfile.coffee","hash":"26e5b1b945704c8bc78b928feede895c4c111c95","modified":1492068660986},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1492068660410},{"_id":"themes/next/package.json","hash":"63e9c0f1dd9e5d7f51b4ae383981ef939a2ed45d","modified":1492068661094},{"_id":"themes/next/.javascript_ignore","hash":"d619ee13031908cd72666e4ff652d2ea3483b1c3","modified":1492068660218},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1492068660218},{"_id":"source/_posts/Hexo使用筆記.md","hash":"b61503c9431e1689e06e2fc8caffcf4beef98a17","modified":1492581600987},{"_id":"source/_posts/Facebook-Graph-API操作.md","hash":"40cad011bccbf1f392b68cf3af74f2353a3f6549","modified":1492068660930},{"_id":"source/_posts/Xdebug搭配Visual-Studio-Code使用方法與設定.md","hash":"fd9edb84dc0bfdc94195bb9c782975861761d189","modified":1503557793814},{"_id":"source/_posts/npm用法.md","hash":"99fe3ce15f232895ae886f2c213099e3cb0a1f39","modified":1499821534120},{"_id":"source/_posts/AngularJS學習筆記.md","hash":"402ddac6ec8e200fb824f23a7581c6e42b6bb406","modified":1492068661094},{"_id":"source/_posts/Mongodb啟用問題.md","hash":"9b3e178bf4d9092cb13710fa441ab2088d4f4f5d","modified":1492068660474},{"_id":"source/_posts/利用ffmpeg影片轉檔與合併字幕.md","hash":"cb6bdc87104f425509d98c60cccd37fdc5705331","modified":1492068660986},{"_id":"source/_posts/Ubuntu-14-04安裝ffmpeg.md","hash":"0a53dd3053c9b69cd7dd9bdbde67d387ff252c6c","modified":1492394536011},{"_id":"source/_posts/常用bash指令.md","hash":"33d4d8f02537b7ecf7bea648834fece1987f54b5","modified":1492068661094},{"_id":"source/_posts/在ubuntu利用mono執行C-程式.md","hash":"a5dc372986ae024a4e07f00a8b5d5b78575fa021","modified":1503557647294},{"_id":"source/_posts/查詢google-AccessToken狀態.md","hash":"185838f49e0786daa5cb6a0b31f14b6619329774","modified":1492068660474},{"_id":"source/_posts/利用ffmpeg合併m3u8串流影片，並且轉成MP4格式.md","hash":"a118e53eac72f2734a967da348564a914fa5cc2b","modified":1493083581903},{"_id":"source/_posts/使用mitmproxy快速建立並透過proxy監控http封包.md","hash":"c40f4d4b60491e591194e19d390f862f6f4246b0","modified":1492651591664},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1492068660986},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"c2024ded82143807c28a299c5fe6b927ef3525ff","modified":1492068660410},{"_id":"source/_posts/超商咖啡價格分析.md","hash":"fb120b5f5524d732196915cc85df758b1c19d147","modified":1492068660218},{"_id":"source/_posts/透過ngrok讓外網可以瀏覽本機服務.md","hash":"ec1d494cb39f86c8ae29c66f8577068147fdea1e","modified":1492570822475},{"_id":"themes/next/languages/default.yml","hash":"9db835c0543ade5a89bc80ec5a898203227cf3d8","modified":1492068660558},{"_id":"themes/next/languages/de.yml","hash":"786afba25cfc98845a20d9901823ebeebcd1cbbf","modified":1492068660342},{"_id":"themes/next/languages/en.yml","hash":"f03799cbdb5a33064ead080bcac4baca1f6bc5f9","modified":1492068660986},{"_id":"themes/next/languages/ja.yml","hash":"a2c7b6301b5474aab798946fb700289df237c3cf","modified":1492068660410},{"_id":"themes/next/languages/fr-FR.yml","hash":"1a084623c39de74301f3e92f9388a3a815a542ca","modified":1492068660986},{"_id":"themes/next/languages/id.yml","hash":"147c01e41b931085ad14250fa900c2249dcbbdd7","modified":1492068661094},{"_id":"themes/next/languages/pt.yml","hash":"ca239b39bf65c9462e59d51b12f0fe566d453197","modified":1492068660558},{"_id":"themes/next/languages/ru.yml","hash":"cc7b964a46587aea0e57b0a5269d8fd25570858e","modified":1492068661094},{"_id":"themes/next/languages/zh-Hans.yml","hash":"bea452bc49aed171a210d09bd6cddc4e846ea8ab","modified":1492068661094},{"_id":"themes/next/languages/zh-hk.yml","hash":"519ab3d817ec3bc5bfc91159c494b6b3c170bea7","modified":1492068660342},{"_id":"source/_posts/從sublime-text到atom.md","hash":"9b8be43396cbb8e27dc8aff7103480005a52a8ce","modified":1493112343783},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1492068660218},{"_id":"themes/next/languages/zh-tw.yml","hash":"6b1f345aaefc13e6723dc8a6741b59ac05c20dfd","modified":1492068660818},{"_id":"themes/next/layout/_layout.swig","hash":"74157f6cfd679ea11febec632542793f37c5e5d4","modified":1492068660730},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1492068660730},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1492068660730},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1492068660218},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1492068661094},{"_id":"themes/next/layout/page.swig","hash":"8019d02232a6dd1a665b6a4d2daef8e5dd2f0049","modified":1492068660730},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1492068660986},{"_id":"themes/next/test/.jshintrc","hash":"096ed6df627373edd820f24d46b8baf528dee61d","modified":1492068660218},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1492068660730},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1464235029654},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1492068660730},{"_id":"themes/next/layout/_partials/comments.swig","hash":"82a9bc2ba60ce68419128ff60624bd74b15dfb78","modified":1464235029650},{"_id":"themes/next/layout/_partials/footer.swig","hash":"0ce71d8322ea7dea82d9371fa2fe13949aa870e3","modified":1464235029650},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1464235029650},{"_id":"themes/next/layout/_partials/head.swig","hash":"f83b1c55bedd2c1a3eb734c72c6997795a4e5f99","modified":1464235029650},{"_id":"themes/next/layout/_partials/header.swig","hash":"963a765dc00e6ac43cfc53ffaf5725eb854cf95e","modified":1464235029650},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1464235029650},{"_id":"themes/next/layout/_partials/search.swig","hash":"011b9d6c9f0a2f4654908ea20b9391f9b7981271","modified":1464235029650},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"82d060fe055d6e423bbc9199f82dfe5c68e74779","modified":1464235029650},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1464235029650},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1464235029650},{"_id":"source/_posts/Hexo使用筆記/hexo-logo.png","hash":"db98ac067990dffa39fdf4d4f0bf5e66ec56cb3d","modified":1492573959883},{"_id":"source/_posts/使用mitmproxy快速建立並透過proxy監控http封包/mitmproxy_start.png","hash":"df1568db307b3cbc270a3cc300a606e0416e894c","modified":1492571170647},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"0b91cadecead8e0b5211cc42b085998d94af503a","modified":1464235029650},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"43c3433155ccd9abcbe7dce2e6bfa1f3a66af18b","modified":1464235029650},{"_id":"themes/next/layout/_macro/post.swig","hash":"1ca03011bed92614832b1343b65be92183957dc5","modified":1464235029650},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1464235029650},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1464235029650},{"_id":"themes/next/scripts/tags/full-image.js","hash":"3acce36db0feb11a982c6c799aa6b6b47df2827c","modified":1464235029650},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1464235029650},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"b883289054ee54a374caad5d4883591beb94bd8b","modified":1464235029650},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"85327c2174d09c6d69c9033592e6c8f7eb7ac3ba","modified":1464235029650},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1464235029654},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1464235029654},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1464235029654},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1464235029654},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1464235029654},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1464235029654},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1464235029654},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1464235029654},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1464235029654},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1464235029654},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1464235029654},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1464235029654},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1464235029654},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1464235029654},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1464235029650},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1464235029650},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1464235029654},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1464235029654},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1464235029654},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1464235029654},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1464235029654},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1464235029650},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1464235029650},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1464235029650},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1464235029650},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"c07f7b2f264e5215b8ed42d67e8cef2477558364","modified":1464235029650},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"7ca5cb4daa58b3504e17f3e02975e794bc634658","modified":1464235029650},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1464235029650},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1464235029650},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1464235029650},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1464235029654},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"907b931d775d32405d02a25b3b0a3ac03bf804d0","modified":1464235029650},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"0a89c04055bade7baa5962f1d5aefe438d83a244","modified":1464235029650},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"069bb17fb1db3bc7c85c88efa3ed94ab6becbe2c","modified":1464235029650},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1464235029650},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"5bafc33f57508d1d04a9930165240f6e9efa8d6d","modified":1464235029650},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"1561bd0c107d725252c6d746e9ac177fc18f93bf","modified":1464235029650},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1464235029650},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1464235029654},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1464235029654},{"_id":"source/_posts/Hexo使用筆記/image/hexo-logo.png","hash":"db98ac067990dffa39fdf4d4f0bf5e66ec56cb3d","modified":1492573959883},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1464235029654},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1464235029654},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1464235029654},{"_id":"themes/next/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1464235029654},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1464235029654},{"_id":"themes/next/source/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1464235029654},{"_id":"themes/next/source/vendors/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1464235029654},{"_id":"themes/next/source/vendors/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1464235029654},{"_id":"themes/next/source/vendors/font-awesome/.bower.json","hash":"7da985a99674e54f514d4fd9fcd3bcea6e7e41d5","modified":1464235029658},{"_id":"themes/next/source/vendors/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1464235029658},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1464235029654},{"_id":"themes/next/source/vendors/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1464235029658},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1464235029658},{"_id":"themes/next/source/vendors/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1464235029658},{"_id":"themes/next/source/vendors/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1464235029658},{"_id":"themes/next/source/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1464235029658},{"_id":"themes/next/source/vendors/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1464235029658},{"_id":"themes/next/source/vendors/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1464235029658},{"_id":"themes/next/source/vendors/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1464235029662},{"_id":"themes/next/source/vendors/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1464235029662},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1464235029662},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1464235029662},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1464235029662},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1464235029662},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1464235029662},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1464235029654},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"3ead77befa064d6327dc7afd0a5af7be59a5f196","modified":1464235029654},{"_id":"themes/next/source/css/_variables/base.styl","hash":"17624186f7a1f28daddea258d044f8e03b2f4bea","modified":1464235029654},{"_id":"themes/next/source/vendors/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1464235029662},{"_id":"themes/next/source/vendors/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1464235029662},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1464235029662},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1464235029662},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1464235029662},{"_id":"themes/next/source/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1464235029662},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1464235029650},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1464235029650},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1464235029650},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1464235029650},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1464235029650},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1464235029654},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1464235029654},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1464235029654},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1464235029654},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1464235029654},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1464235029654},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1464235029654},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"7c43d66da93cde65b473a7d6db2a86f9a42647d6","modified":1464235029650},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1464235029650},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"44e761721e8ad787ef571a3cc57bbc12d318a2a3","modified":1464235029650},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"334176d838ee528e58468d8bc74ff3a6d3f25b2b","modified":1464235029650},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1464235029650},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1464235029650},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"3491d3cebabc8a28857200db28a1be65aad6adc2","modified":1464235029650},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"8c7af79407d223486fba72b8150fe045a553bf70","modified":1464235029650},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1464235029654},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1464235029654},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1464235029654},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1464235029654},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"4303776991ef28f5742ca51c7dffe6f12f0acf34","modified":1464235029654},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1464235029654},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1464235029654},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"6ed60cc621bac096c0ed7534fa25b1a52dc571d4","modified":1464235029654},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1464235029654},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"c2c6c4f6434b4f94aac2af5861cd769427f0ee10","modified":1464235029654},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1464235029654},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1464235029654},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"be22ad34f546a07f6d56b424338cdd898683eea4","modified":1464235029654},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"938d39eedc6e3d33918c1145a5bf1e79991d3fcf","modified":1464235029654},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"8d7cecde4933900c7df2db9d0a98f5f82f88dc93","modified":1464235029654},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"d09280e5b79f3b573edb30f30c7a5f03ac640986","modified":1464235029654},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1464235029654},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"d4b7bd610ca03dbb2f5b66631c0e84a79fb4660b","modified":1464235029654},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"1b10ba2d3ad0c063c418dc94a0b7e0db4b342c53","modified":1464235029654},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1464235029654},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1464235029654},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1464235029654},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1464235029654},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1464235029654},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1464235029654},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1464235029654},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1464235029654},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1464235029654},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1464235029658},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1464235029658},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1464235029658},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1464235029662},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1464235029658},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1464235029658},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1464235029662},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1464235029662},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1464235029654},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1464235029658},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1464235029658},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1464235029662},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1464235029650},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1464235029650},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1464235029650},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1464235029650},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1464235029650},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1464235029650},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"4da051c7f3924fa2db1e73c55b2baf1c2c150255","modified":1464235029650},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"90f8f9706cd7fe829cf06e9959a65fd3f8b994fa","modified":1464235029650},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1464235029650},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1464235029650},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"3c46efd6601e268093ce6d7b1471d18501878f0d","modified":1464235029650},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1464235029650},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1464235029650},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1464235029650},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1464235029654},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1464235029654},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d543d1377c1f61b70e3adb6da0eb12797552e5f2","modified":1464235029654},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"15063d79b5befc21820baf05d6f20cc1c1787477","modified":1464235029654},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"cbca4842a54950e2934b3b8f3cd940f122111aef","modified":1464235029654},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1464235029654},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1464235029654},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1464235029654},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1464235029654},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"4eb18b12fa0ea6c35925d9a64f64e2a7dae8c7fd","modified":1464235029654},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1464235029654},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1464235029654},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1464235029654},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1464235029654},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1464235029654},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1464235029654},{"_id":"themes/next/source/vendors/velocity/velocity.js","hash":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1464235029662},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1464235029654},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1464235029654},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1464235029654},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1464235029654},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"618f73450cf541f88a4fddc3d22898aee49d105d","modified":1464235029654},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1464235029654},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"8e66c2635d48e11de616bb29c4b1323698eebc0a","modified":1464235029654},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1464235029654},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1464235029654},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1464235029654},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1464235029654},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"795d94561888d31cb7a6ff4a125596809ea69b7d","modified":1464235029654},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"3afc459442c132c480d1d832f1a872f1070bb048","modified":1464235029654},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1464235029654},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1464235029654},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1464235029654},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1464235029654},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1464235029654},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1464235029654},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1464235029654},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1464235029654},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1464235029654},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1464235029662},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1464235029658},{"_id":"public/2016/05/13/常用bash指令/index.html","hash":"a7901a7762b970304ee5896584b3b5ecafa63abb","modified":1503557529438},{"_id":"public/2016/05/16/AngularJS學習筆記/index.html","hash":"e0a5b19de058e7e4a4d16ab5566e58799bf89475","modified":1503557529438},{"_id":"public/2016/05/17/超商咖啡價格分析/index.html","hash":"bacfa422efeec300c4ffb9e6f5b259a648680f7e","modified":1503557529438},{"_id":"public/2016/05/18/查詢google-AccessToken狀態/index.html","hash":"eefdf373f05dfbf9168e4bef832694ccda3d217e","modified":1503557529438},{"_id":"public/2016/06/23/Facebook-Graph-API操作/index.html","hash":"c6567f84c9ca49d4ab587d8bc2f6279759f202f5","modified":1503557529438},{"_id":"public/2017/04/13/Ubuntu-14-04安裝ffmpeg/index.html","hash":"ed29f2add90e3531c3e8566c1e701a40154d9a48","modified":1503557529438},{"_id":"public/2017/04/19/使用mitmproxy快速建立並透過proxy監控http封包/index.html","hash":"fd521e647519e9677bd444b7bb5b985099aac827","modified":1503557529438},{"_id":"public/2017/04/19/透過ngrok讓外網可以瀏覽本機服務/index.html","hash":"7e3eb010d1b04a3a1e22c2fc75b69ed540a102da","modified":1503557529438},{"_id":"public/2017/04/25/從sublime-text到atom/index.html","hash":"1e9b437519cea77d3e30466552162f57e8b27ac8","modified":1503557215199},{"_id":"public/archives/index.html","hash":"89db465602f2e94a2c7945dfa00a7978cb6c4975","modified":1503557529439},{"_id":"public/archives/page/2/index.html","hash":"7bc223a52cbea45b0b1de0d803bba624c708f9d7","modified":1503557529439},{"_id":"public/archives/2016/index.html","hash":"4934254015a1fd64dde82c334dee972af97c2a9e","modified":1503557529439},{"_id":"public/archives/2016/05/index.html","hash":"e2277ad5e5fdbe04b4612eb18f47df4989ebaa2a","modified":1503557529439},{"_id":"public/archives/2016/06/index.html","hash":"5d57f8c1172d5f6382f0a7cc41a23e3722260a97","modified":1503557529439},{"_id":"public/archives/2016/10/index.html","hash":"3a7697f899966e39a700a72ee6c2a87f00b71f2f","modified":1503557529439},{"_id":"public/archives/2017/index.html","hash":"dfa51fbfb1dd78f1e1b6683409bf6f7ddcfaf29b","modified":1503557529439},{"_id":"public/archives/2017/04/index.html","hash":"8ab01406c2b0929b1f54bf43432e98f8e4083456","modified":1503557529439},{"_id":"public/2017/04/24/npm用法/index.html","hash":"e4a3ec9b7cf2097606a9cf47094ad210e0e7a497","modified":1503557529438},{"_id":"public/2016/05/12/Hexo使用筆記/index.html","hash":"dde48b1074fdb3cce6b38b17cbce8c1d771087a3","modified":1503557529439},{"_id":"public/2017/04/13/利用ffmpeg合併m3u8串流影片，並且轉成MP4格式/index.html","hash":"b19a7efc791ce054a4b60ff415f156f648edd18e","modified":1503557529440},{"_id":"public/index.html","hash":"c5cf92cf42f7f03e75e003a4976c92b9230a1168","modified":1503557803225},{"_id":"public/2016/05/26/Mongodb啟用問題/index.html","hash":"3e53eb28f90887b035901a4267411915c5391bbc","modified":1503557529440},{"_id":"public/page/2/index.html","hash":"aa8fa92607d7b2b43dceb86651bcf95951d72789","modified":1503557529440},{"_id":"public/2016/10/14/利用ffmpeg影片轉檔與合併字幕/index.html","hash":"a41457a7bda8e510d4439137dd99a881c10b21be","modified":1503557529440},{"_id":"public/2017/07/26/Xdebug搭配Visual-Studio-Code使用方法與設定/index.html","hash":"355138b684e18a66427342fabd91548ec539796b","modified":1503557803225},{"_id":"public/2017/08/24/在ubuntu利用mono執行C-程式/index.html","hash":"f250e88478ae941801a4268c29f2af461b58e3fb","modified":1503557655085},{"_id":"public/archives/2017/07/index.html","hash":"79251fc868f63faee1017586903b35c4a57d44b9","modified":1503557529439},{"_id":"public/archives/2017/08/index.html","hash":"2ee7a39e3dc1606d98bd96ef772604210169bb7b","modified":1503557529439},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1503557215209},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1503557215209},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1503557215209},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1503557215209},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1503557215210},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1503557215210},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1503557215210},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1503557215210},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1503557215210},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1503557215210},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1503557215210},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1503557215210},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1503557215210},{"_id":"public/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1503557215210},{"_id":"public/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1503557215210},{"_id":"public/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1503557215210},{"_id":"public/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1503557215210},{"_id":"public/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1503557215210},{"_id":"public/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1503557215210},{"_id":"public/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1503557215210},{"_id":"public/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1503557215210},{"_id":"public/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1503557215211},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1503557215211},{"_id":"public/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1503557215211},{"_id":"public/2017/04/19/使用mitmproxy快速建立並透過proxy監控http封包/mitmproxy_start.png","hash":"df1568db307b3cbc270a3cc300a606e0416e894c","modified":1503557215211},{"_id":"public/2016/05/12/Hexo使用筆記/hexo-logo.png","hash":"db98ac067990dffa39fdf4d4f0bf5e66ec56cb3d","modified":1503557216007},{"_id":"public/2016/05/12/Hexo使用筆記/image/hexo-logo.png","hash":"db98ac067990dffa39fdf4d4f0bf5e66ec56cb3d","modified":1503557216008},{"_id":"public/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1503557216014},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1503557216014},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1503557216014},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1503557216020},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1503557216021},{"_id":"public/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1503557216021},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1503557216021},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1503557216021},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1503557216021},{"_id":"public/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1503557216021},{"_id":"public/vendors/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1503557216021},{"_id":"public/vendors/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1503557216021},{"_id":"public/vendors/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1503557216021},{"_id":"public/vendors/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1503557216021},{"_id":"public/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1503557216021},{"_id":"public/vendors/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1503557216021},{"_id":"public/vendors/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1503557216021},{"_id":"public/vendors/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1503557216022},{"_id":"public/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1503557216022},{"_id":"public/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1503557216022},{"_id":"public/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1503557216022},{"_id":"public/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1503557216022},{"_id":"public/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1503557216022},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1503557216022},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1503557216022},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1503557216022},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1503557216022},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1503557216022},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1503557216022},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1503557216022},{"_id":"public/css/main.css","hash":"5592cd4784faa0ff0a937b1397ae6c7784823e3d","modified":1503557216022},{"_id":"public/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1503557216022},{"_id":"public/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1503557216022},{"_id":"public/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1503557216022},{"_id":"public/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1503557216022},{"_id":"public/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1503557216022},{"_id":"public/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1503557216023},{"_id":"public/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1503557216023},{"_id":"public/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1503557216023},{"_id":"public/vendors/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1503557216023},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1503557216023},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1503557216033}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Hexo使用筆記","date":"2016-05-12T10:02:25.000Z","_content":"\n### 發表文章\n\n``` bash\n$ hexo n [type] [title]\nor\n$ hexo new [type] [title]\n```\n[type]可以是post, page or draft, 預設是post\n\n### 發表文章 Example\n``` bash\n$ hexo n 這是一篇文章\nor\n$ hexo new 這是一篇文章\n```\n<!-- more -->\n### 編譯\n``` bash\n$ hexo g\nor\n$ hexo generate\n```\n\n### 開啟自建伺服器進行預覽\n``` bash\n$ hexo s\nor\n$ hexo server\n```\n照著訊息指示瀏覽網址就可以了\n\n\n### 在文章中加入圖片\n把_config.yml的post_asset_folder設定為true\n```\npost_asset_folder: true\n```\n\n之後建立新文章時，自動在source/_posts資料夾中，以新文章名稱建立對應的資料夾\n如果是既有的文章，也可以手動以文章名稱建立對應的資料夾\n該文章的圖片或附件就可放在此資料夾\n使用方法官網有簡單的[介紹](https://hexo.io/zh-tw/docs/asset-folders.html)\n例如圖片叫做hexo-logo.png 將該圖片放在對應的資料夾，大概的結構如下\n```\nsource\n--> _posts\n--> 文章標題   <----資料夾\n------> hexo-logo.png\n------> image   <----資料夾\n--------> hexo-logo.png\n--> 文章標題.md\n```\n那麼插入圖片的語法就是如下\n```\n{% asset_img hexo-logo.png 這就是圖片啦 %}\n```\n{% asset_img hexo-logo.png 這就是圖片啦 %}\n\n包含子資料夾的話也沒問題\n```\n{% asset_img \"image/hexo-logo.png\" 這是放在子資料夾中的圖片 %}\n```\n{% asset_img \"image/hexo-logo.png\" 這是放在子資料夾中的圖片 %}\n\n當然也可以透過markdown語法直接加入外部圖片的連結\n```\n![外部圖片](https://raw.githubusercontent.com/hexojs/logo/master/hexo-logo.png)\n```\n![外部圖片](https://raw.githubusercontent.com/hexojs/logo/master/hexo-logo.png)","source":"_posts/Hexo使用筆記.md","raw":"---\ntitle: Hexo使用筆記\ndate: 2016-05-12 18:02:25\ntags:\n---\n\n### 發表文章\n\n``` bash\n$ hexo n [type] [title]\nor\n$ hexo new [type] [title]\n```\n[type]可以是post, page or draft, 預設是post\n\n### 發表文章 Example\n``` bash\n$ hexo n 這是一篇文章\nor\n$ hexo new 這是一篇文章\n```\n<!-- more -->\n### 編譯\n``` bash\n$ hexo g\nor\n$ hexo generate\n```\n\n### 開啟自建伺服器進行預覽\n``` bash\n$ hexo s\nor\n$ hexo server\n```\n照著訊息指示瀏覽網址就可以了\n\n\n### 在文章中加入圖片\n把_config.yml的post_asset_folder設定為true\n```\npost_asset_folder: true\n```\n\n之後建立新文章時，自動在source/_posts資料夾中，以新文章名稱建立對應的資料夾\n如果是既有的文章，也可以手動以文章名稱建立對應的資料夾\n該文章的圖片或附件就可放在此資料夾\n使用方法官網有簡單的[介紹](https://hexo.io/zh-tw/docs/asset-folders.html)\n例如圖片叫做hexo-logo.png 將該圖片放在對應的資料夾，大概的結構如下\n```\nsource\n--> _posts\n--> 文章標題   <----資料夾\n------> hexo-logo.png\n------> image   <----資料夾\n--------> hexo-logo.png\n--> 文章標題.md\n```\n那麼插入圖片的語法就是如下\n```\n{% asset_img hexo-logo.png 這就是圖片啦 %}\n```\n{% asset_img hexo-logo.png 這就是圖片啦 %}\n\n包含子資料夾的話也沒問題\n```\n{% asset_img \"image/hexo-logo.png\" 這是放在子資料夾中的圖片 %}\n```\n{% asset_img \"image/hexo-logo.png\" 這是放在子資料夾中的圖片 %}\n\n當然也可以透過markdown語法直接加入外部圖片的連結\n```\n![外部圖片](https://raw.githubusercontent.com/hexojs/logo/master/hexo-logo.png)\n```\n![外部圖片](https://raw.githubusercontent.com/hexojs/logo/master/hexo-logo.png)","slug":"Hexo使用筆記","published":1,"updated":"2017-04-19T06:00:00.987Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6q357090000qxb4onczius4","content":"<h3 id=\"發表文章\"><a href=\"#發表文章\" class=\"headerlink\" title=\"發表文章\"></a>發表文章</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo n [<span class=\"built_in\">type</span>] [title]</div><div class=\"line\">or</div><div class=\"line\">$ hexo new [<span class=\"built_in\">type</span>] [title]</div></pre></td></tr></table></figure>\n<p>[type]可以是post, page or draft, 預設是post</p>\n<h3 id=\"發表文章-Example\"><a href=\"#發表文章-Example\" class=\"headerlink\" title=\"發表文章 Example\"></a>發表文章 Example</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo n 這是一篇文章</div><div class=\"line\">or</div><div class=\"line\">$ hexo new 這是一篇文章</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h3 id=\"編譯\"><a href=\"#編譯\" class=\"headerlink\" title=\"編譯\"></a>編譯</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo g</div><div class=\"line\">or</div><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<h3 id=\"開啟自建伺服器進行預覽\"><a href=\"#開啟自建伺服器進行預覽\" class=\"headerlink\" title=\"開啟自建伺服器進行預覽\"></a>開啟自建伺服器進行預覽</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo s</div><div class=\"line\">or</div><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>照著訊息指示瀏覽網址就可以了</p>\n<h3 id=\"在文章中加入圖片\"><a href=\"#在文章中加入圖片\" class=\"headerlink\" title=\"在文章中加入圖片\"></a>在文章中加入圖片</h3><p>把_config.yml的post_asset_folder設定為true<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">post_asset_folder: true</div></pre></td></tr></table></figure></p>\n<p>之後建立新文章時，自動在source/_posts資料夾中，以新文章名稱建立對應的資料夾<br>如果是既有的文章，也可以手動以文章名稱建立對應的資料夾<br>該文章的圖片或附件就可放在此資料夾<br>使用方法官網有簡單的<a href=\"https://hexo.io/zh-tw/docs/asset-folders.html\" target=\"_blank\" rel=\"external\">介紹</a><br>例如圖片叫做hexo-logo.png 將該圖片放在對應的資料夾，大概的結構如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">source</div><div class=\"line\">--&gt; _posts</div><div class=\"line\">--&gt; 文章標題   &lt;----資料夾</div><div class=\"line\">------&gt; hexo-logo.png</div><div class=\"line\">------&gt; image   &lt;----資料夾</div><div class=\"line\">--------&gt; hexo-logo.png</div><div class=\"line\">--&gt; 文章標題.md</div></pre></td></tr></table></figure></p>\n<p>那麼插入圖片的語法就是如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% asset_img hexo-logo.png 這就是圖片啦 %&#125;</div></pre></td></tr></table></figure></p>\n<img src=\"/2016/05/12/Hexo使用筆記/hexo-logo.png\" alt=\"這就是圖片啦\" title=\"這就是圖片啦\">\n<p>包含子資料夾的話也沒問題<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% asset_img &quot;image/hexo-logo.png&quot; 這是放在子資料夾中的圖片 %&#125;</div></pre></td></tr></table></figure></p>\n<img src=\"/2016/05/12/Hexo使用筆記/image/hexo-logo.png\" alt=\"這是放在子資料夾中的圖片\" title=\"這是放在子資料夾中的圖片\">\n<p>當然也可以透過markdown語法直接加入外部圖片的連結<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">![外部圖片](https://raw.githubusercontent.com/hexojs/logo/master/hexo-logo.png)</div></pre></td></tr></table></figure></p>\n<p><img src=\"https://raw.githubusercontent.com/hexojs/logo/master/hexo-logo.png\" alt=\"外部圖片\"></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"發表文章\"><a href=\"#發表文章\" class=\"headerlink\" title=\"發表文章\"></a>發表文章</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo n [<span class=\"built_in\">type</span>] [title]</div><div class=\"line\">or</div><div class=\"line\">$ hexo new [<span class=\"built_in\">type</span>] [title]</div></pre></td></tr></table></figure>\n<p>[type]可以是post, page or draft, 預設是post</p>\n<h3 id=\"發表文章-Example\"><a href=\"#發表文章-Example\" class=\"headerlink\" title=\"發表文章 Example\"></a>發表文章 Example</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo n 這是一篇文章</div><div class=\"line\">or</div><div class=\"line\">$ hexo new 這是一篇文章</div></pre></td></tr></table></figure>","more":"<h3 id=\"編譯\"><a href=\"#編譯\" class=\"headerlink\" title=\"編譯\"></a>編譯</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo g</div><div class=\"line\">or</div><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<h3 id=\"開啟自建伺服器進行預覽\"><a href=\"#開啟自建伺服器進行預覽\" class=\"headerlink\" title=\"開啟自建伺服器進行預覽\"></a>開啟自建伺服器進行預覽</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo s</div><div class=\"line\">or</div><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>照著訊息指示瀏覽網址就可以了</p>\n<h3 id=\"在文章中加入圖片\"><a href=\"#在文章中加入圖片\" class=\"headerlink\" title=\"在文章中加入圖片\"></a>在文章中加入圖片</h3><p>把_config.yml的post_asset_folder設定為true<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">post_asset_folder: true</div></pre></td></tr></table></figure></p>\n<p>之後建立新文章時，自動在source/_posts資料夾中，以新文章名稱建立對應的資料夾<br>如果是既有的文章，也可以手動以文章名稱建立對應的資料夾<br>該文章的圖片或附件就可放在此資料夾<br>使用方法官網有簡單的<a href=\"https://hexo.io/zh-tw/docs/asset-folders.html\">介紹</a><br>例如圖片叫做hexo-logo.png 將該圖片放在對應的資料夾，大概的結構如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">source</div><div class=\"line\">--&gt; _posts</div><div class=\"line\">--&gt; 文章標題   &lt;----資料夾</div><div class=\"line\">------&gt; hexo-logo.png</div><div class=\"line\">------&gt; image   &lt;----資料夾</div><div class=\"line\">--------&gt; hexo-logo.png</div><div class=\"line\">--&gt; 文章標題.md</div></pre></td></tr></table></figure></p>\n<p>那麼插入圖片的語法就是如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% asset_img hexo-logo.png 這就是圖片啦 %&#125;</div></pre></td></tr></table></figure></p>\n<img src=\"/2016/05/12/Hexo使用筆記/hexo-logo.png\" alt=\"這就是圖片啦\" title=\"這就是圖片啦\">\n<p>包含子資料夾的話也沒問題<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% asset_img &quot;image/hexo-logo.png&quot; 這是放在子資料夾中的圖片 %&#125;</div></pre></td></tr></table></figure></p>\n<img src=\"/2016/05/12/Hexo使用筆記/image/hexo-logo.png\" alt=\"這是放在子資料夾中的圖片\" title=\"這是放在子資料夾中的圖片\">\n<p>當然也可以透過markdown語法直接加入外部圖片的連結<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">![外部圖片](https://raw.githubusercontent.com/hexojs/logo/master/hexo-logo.png)</div></pre></td></tr></table></figure></p>\n<p><img src=\"https://raw.githubusercontent.com/hexojs/logo/master/hexo-logo.png\" alt=\"外部圖片\"></p>"},{"title":"Facebook Graph API操作","date":"2016-06-23T02:41:25.000Z","_content":"\n### 取得無期限token方法\n\n> https://developers.facebook.com/tools/explorer\n\n選擇想要授權的應用程式\n\n選擇Get User Access Token\n\n至少勾選pages_show_list權限，其他在視需求勾選，Ex: email...\n\n授權畫面確定後，存取權仗就會出現新的access token\n<!-- more -->\n但此時該token的期限只有一小時左右\n\n接著透過瀏覽器或curl要求下面網址\n\nRequest:\n>https://graph.facebook.com/oauth/access_token?client_id=[預授權的應用程式client_id]&client_secret=[預授權的應用程式client_secret]&grant_type=fb_exchange_token&fb_exchange_token=[剛剛獲得的短效accessToken]\n\nResponse:\n```\naccess_token=EAAHFVJ2x6mwBAHwjsxWvhPghIsXqyr3l1cTSbPaLZCeYF8LBZAw27P8kRv6QHxA7LBI6FTgVIQrpiKvwvd67TpS3kASYvIvoHHZBL6RKXKdwXdlk7jZCG6UPZC4fFnCWp6h7Y7XNXHZB5uZBh30ZCEgfe7Em4jGxZALUZD&expires=5184000\n```\n\n此時的accessToken會是兩個月的有效期，其實蠻長了。但是我們要的是永不過期的!\n\n接著再回到Graph tool\n>https://developers.facebook.com/tools/explorer\n\n將兩個月期效的accessToken貼在`存取權仗`的欄位\n`Graph API欄位`則填入me, 按送出後，就會列出相關資訊\n這時候神奇的來了，原本的兩個月期效的accessToken就會變成永不過期的accessToken了\n\n怎麼讓這個永不過期的accessToken失效呢，最簡單的方式就是移除該app就好了\n\n### 查詢access Token資訊、有效期限\n\nhttps://developers.facebook.com/tools/debug/accesstoken\n\n","source":"_posts/Facebook-Graph-API操作.md","raw":"---\ntitle: Facebook Graph API操作\ndate: 2016-06-23 10:41:25\ntags:\n---\n\n### 取得無期限token方法\n\n> https://developers.facebook.com/tools/explorer\n\n選擇想要授權的應用程式\n\n選擇Get User Access Token\n\n至少勾選pages_show_list權限，其他在視需求勾選，Ex: email...\n\n授權畫面確定後，存取權仗就會出現新的access token\n<!-- more -->\n但此時該token的期限只有一小時左右\n\n接著透過瀏覽器或curl要求下面網址\n\nRequest:\n>https://graph.facebook.com/oauth/access_token?client_id=[預授權的應用程式client_id]&client_secret=[預授權的應用程式client_secret]&grant_type=fb_exchange_token&fb_exchange_token=[剛剛獲得的短效accessToken]\n\nResponse:\n```\naccess_token=EAAHFVJ2x6mwBAHwjsxWvhPghIsXqyr3l1cTSbPaLZCeYF8LBZAw27P8kRv6QHxA7LBI6FTgVIQrpiKvwvd67TpS3kASYvIvoHHZBL6RKXKdwXdlk7jZCG6UPZC4fFnCWp6h7Y7XNXHZB5uZBh30ZCEgfe7Em4jGxZALUZD&expires=5184000\n```\n\n此時的accessToken會是兩個月的有效期，其實蠻長了。但是我們要的是永不過期的!\n\n接著再回到Graph tool\n>https://developers.facebook.com/tools/explorer\n\n將兩個月期效的accessToken貼在`存取權仗`的欄位\n`Graph API欄位`則填入me, 按送出後，就會列出相關資訊\n這時候神奇的來了，原本的兩個月期效的accessToken就會變成永不過期的accessToken了\n\n怎麼讓這個永不過期的accessToken失效呢，最簡單的方式就是移除該app就好了\n\n### 查詢access Token資訊、有效期限\n\nhttps://developers.facebook.com/tools/debug/accesstoken\n\n","slug":"Facebook-Graph-API操作","published":1,"updated":"2017-04-13T07:31:00.930Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6q3570f0001qxb4fkbt7yh2","content":"<h3 id=\"取得無期限token方法\"><a href=\"#取得無期限token方法\" class=\"headerlink\" title=\"取得無期限token方法\"></a>取得無期限token方法</h3><blockquote>\n<p><a href=\"https://developers.facebook.com/tools/explorer\" target=\"_blank\" rel=\"external\">https://developers.facebook.com/tools/explorer</a></p>\n</blockquote>\n<p>選擇想要授權的應用程式</p>\n<p>選擇Get User Access Token</p>\n<p>至少勾選pages_show_list權限，其他在視需求勾選，Ex: email…</p>\n<p>授權畫面確定後，存取權仗就會出現新的access token<br><a id=\"more\"></a><br>但此時該token的期限只有一小時左右</p>\n<p>接著透過瀏覽器或curl要求下面網址</p>\n<p>Request:</p>\n<blockquote>\n<p><a href=\"https://graph.facebook.com/oauth/access_token?client_id=[預授權的應用程式client_id]&amp;client_secret=[預授權的應用程式client_secret]&amp;grant_type=fb_exchange_token&amp;fb_exchange_token=[剛剛獲得的短效accessToken\" target=\"_blank\" rel=\"external\">https://graph.facebook.com/oauth/access_token?client_id=[預授權的應用程式client_id]&amp;client_secret=[預授權的應用程式client_secret]&amp;grant_type=fb_exchange_token&amp;fb_exchange_token=[剛剛獲得的短效accessToken</a>]</p>\n</blockquote>\n<p>Response:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">access_token=EAAHFVJ2x6mwBAHwjsxWvhPghIsXqyr3l1cTSbPaLZCeYF8LBZAw27P8kRv6QHxA7LBI6FTgVIQrpiKvwvd67TpS3kASYvIvoHHZBL6RKXKdwXdlk7jZCG6UPZC4fFnCWp6h7Y7XNXHZB5uZBh30ZCEgfe7Em4jGxZALUZD&amp;expires=5184000</div></pre></td></tr></table></figure></p>\n<p>此時的accessToken會是兩個月的有效期，其實蠻長了。但是我們要的是永不過期的!</p>\n<p>接著再回到Graph tool</p>\n<blockquote>\n<p><a href=\"https://developers.facebook.com/tools/explorer\" target=\"_blank\" rel=\"external\">https://developers.facebook.com/tools/explorer</a></p>\n</blockquote>\n<p>將兩個月期效的accessToken貼在<code>存取權仗</code>的欄位<br><code>Graph API欄位</code>則填入me, 按送出後，就會列出相關資訊<br>這時候神奇的來了，原本的兩個月期效的accessToken就會變成永不過期的accessToken了</p>\n<p>怎麼讓這個永不過期的accessToken失效呢，最簡單的方式就是移除該app就好了</p>\n<h3 id=\"查詢access-Token資訊、有效期限\"><a href=\"#查詢access-Token資訊、有效期限\" class=\"headerlink\" title=\"查詢access Token資訊、有效期限\"></a>查詢access Token資訊、有效期限</h3><p><a href=\"https://developers.facebook.com/tools/debug/accesstoken\" target=\"_blank\" rel=\"external\">https://developers.facebook.com/tools/debug/accesstoken</a></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"取得無期限token方法\"><a href=\"#取得無期限token方法\" class=\"headerlink\" title=\"取得無期限token方法\"></a>取得無期限token方法</h3><blockquote>\n<p><a href=\"https://developers.facebook.com/tools/explorer\">https://developers.facebook.com/tools/explorer</a></p>\n</blockquote>\n<p>選擇想要授權的應用程式</p>\n<p>選擇Get User Access Token</p>\n<p>至少勾選pages_show_list權限，其他在視需求勾選，Ex: email…</p>\n<p>授權畫面確定後，存取權仗就會出現新的access token<br>","more":"<br>但此時該token的期限只有一小時左右</p>\n<p>接著透過瀏覽器或curl要求下面網址</p>\n<p>Request:</p>\n<blockquote>\n<p><a href=\"https://graph.facebook.com/oauth/access_token?client_id=[預授權的應用程式client_id]&amp;client_secret=[預授權的應用程式client_secret]&amp;grant_type=fb_exchange_token&amp;fb_exchange_token=[剛剛獲得的短效accessToken\">https://graph.facebook.com/oauth/access_token?client_id=[預授權的應用程式client_id]&amp;client_secret=[預授權的應用程式client_secret]&amp;grant_type=fb_exchange_token&amp;fb_exchange_token=[剛剛獲得的短效accessToken</a>]</p>\n</blockquote>\n<p>Response:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">access_token=EAAHFVJ2x6mwBAHwjsxWvhPghIsXqyr3l1cTSbPaLZCeYF8LBZAw27P8kRv6QHxA7LBI6FTgVIQrpiKvwvd67TpS3kASYvIvoHHZBL6RKXKdwXdlk7jZCG6UPZC4fFnCWp6h7Y7XNXHZB5uZBh30ZCEgfe7Em4jGxZALUZD&amp;expires=5184000</div></pre></td></tr></table></figure></p>\n<p>此時的accessToken會是兩個月的有效期，其實蠻長了。但是我們要的是永不過期的!</p>\n<p>接著再回到Graph tool</p>\n<blockquote>\n<p><a href=\"https://developers.facebook.com/tools/explorer\">https://developers.facebook.com/tools/explorer</a></p>\n</blockquote>\n<p>將兩個月期效的accessToken貼在<code>存取權仗</code>的欄位<br><code>Graph API欄位</code>則填入me, 按送出後，就會列出相關資訊<br>這時候神奇的來了，原本的兩個月期效的accessToken就會變成永不過期的accessToken了</p>\n<p>怎麼讓這個永不過期的accessToken失效呢，最簡單的方式就是移除該app就好了</p>\n<h3 id=\"查詢access-Token資訊、有效期限\"><a href=\"#查詢access-Token資訊、有效期限\" class=\"headerlink\" title=\"查詢access Token資訊、有效期限\"></a>查詢access Token資訊、有效期限</h3><p><a href=\"https://developers.facebook.com/tools/debug/accesstoken\">https://developers.facebook.com/tools/debug/accesstoken</a></p>"},{"title":"Xdebug搭配Visual Studio Code使用方法與設定","date":"2017-07-26T09:04:55.000Z","_content":"方便的在vc code透過xdebug進行php的偵錯\n<!-- more -->\n### 執行環境\nubuntu 14.04\nnginx or apache or cli\nvisual studio code 1.14.1\nphp 5\n\n開發端與Server端不在同一台電腦。\nphp執行環境在遠端，vscode在本地，透過xdebug.remote功能，可以達到遠端debug的需求。\n\n### 安裝xdebug\n```\n# sudo apt-get install php5-xdebug\n```\n\n### 設定xdebug.ini\n編輯xdebug設定檔，加上remote相關資訊\n```\n# vim /etc/php5/mods-available/xdebug.ini\n```\n```\nzend_extension = xdebug.so\nxdebug.remote_enable = 1\nxdebug.remote_autostart = 1\nxdebug.remote_handler = dbgp\nxdebug.remote_host = 172.17.0.1     ;指定vscode所在的IP\nxdebug.remote_connect_back = 1      ;如果為1，則會忽略remote_host\nxdebug.remote_port = 9000\n\nxdebug.remote_log = \"/var/log/xdebug.log\"\n\n```\n其中remote_host, remote_port要填vscode所在的IP與vscode開啟的port(後面會說明)\n\nremote_connect_back 如果設定為1，預設會將debug資訊拋往client，也就是任意開發端。\n\n只要是對server請求的client都可以得到xdebug_session進行debug\n\n因此必須要小心設定。對了，這個設定值對CLI無效。\n\n","source":"_posts/Xdebug搭配Visual-Studio-Code使用方法與設定.md","raw":"---\ntitle: Xdebug搭配Visual Studio Code使用方法與設定\ndate: 2017-07-26 17:04:55\ntags:\n---\n方便的在vc code透過xdebug進行php的偵錯\n<!-- more -->\n### 執行環境\nubuntu 14.04\nnginx or apache or cli\nvisual studio code 1.14.1\nphp 5\n\n開發端與Server端不在同一台電腦。\nphp執行環境在遠端，vscode在本地，透過xdebug.remote功能，可以達到遠端debug的需求。\n\n### 安裝xdebug\n```\n# sudo apt-get install php5-xdebug\n```\n\n### 設定xdebug.ini\n編輯xdebug設定檔，加上remote相關資訊\n```\n# vim /etc/php5/mods-available/xdebug.ini\n```\n```\nzend_extension = xdebug.so\nxdebug.remote_enable = 1\nxdebug.remote_autostart = 1\nxdebug.remote_handler = dbgp\nxdebug.remote_host = 172.17.0.1     ;指定vscode所在的IP\nxdebug.remote_connect_back = 1      ;如果為1，則會忽略remote_host\nxdebug.remote_port = 9000\n\nxdebug.remote_log = \"/var/log/xdebug.log\"\n\n```\n其中remote_host, remote_port要填vscode所在的IP與vscode開啟的port(後面會說明)\n\nremote_connect_back 如果設定為1，預設會將debug資訊拋往client，也就是任意開發端。\n\n只要是對server請求的client都可以得到xdebug_session進行debug\n\n因此必須要小心設定。對了，這個設定值對CLI無效。\n\n","slug":"Xdebug搭配Visual-Studio-Code使用方法與設定","published":1,"updated":"2017-08-24T06:56:33.814Z","_id":"cj6q3570k0002qxb4u3rjrcrw","comments":1,"layout":"post","photos":[],"link":"","content":"<p>方便的在vc code透過xdebug進行php的偵錯<br><a id=\"more\"></a></p>\n<h3 id=\"執行環境\"><a href=\"#執行環境\" class=\"headerlink\" title=\"執行環境\"></a>執行環境</h3><p>ubuntu 14.04<br>nginx or apache or cli<br>visual studio code 1.14.1<br>php 5</p>\n<p>開發端與Server端不在同一台電腦。<br>php執行環境在遠端，vscode在本地，透過xdebug.remote功能，可以達到遠端debug的需求。</p>\n<h3 id=\"安裝xdebug\"><a href=\"#安裝xdebug\" class=\"headerlink\" title=\"安裝xdebug\"></a>安裝xdebug</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"># sudo apt-get install php5-xdebug</div></pre></td></tr></table></figure>\n<h3 id=\"設定xdebug-ini\"><a href=\"#設定xdebug-ini\" class=\"headerlink\" title=\"設定xdebug.ini\"></a>設定xdebug.ini</h3><p>編輯xdebug設定檔，加上remote相關資訊<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"># vim /etc/php5/mods-available/xdebug.ini</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">zend_extension = xdebug.so</div><div class=\"line\">xdebug.remote_enable = 1</div><div class=\"line\">xdebug.remote_autostart = 1</div><div class=\"line\">xdebug.remote_handler = dbgp</div><div class=\"line\">xdebug.remote_host = 172.17.0.1     ;指定vscode所在的IP</div><div class=\"line\">xdebug.remote_connect_back = 1      ;如果為1，則會忽略remote_host</div><div class=\"line\">xdebug.remote_port = 9000</div><div class=\"line\"></div><div class=\"line\">xdebug.remote_log = &quot;/var/log/xdebug.log&quot;</div></pre></td></tr></table></figure>\n<p>其中remote_host, remote_port要填vscode所在的IP與vscode開啟的port(後面會說明)</p>\n<p>remote_connect_back 如果設定為1，預設會將debug資訊拋往client，也就是任意開發端。</p>\n<p>只要是對server請求的client都可以得到xdebug_session進行debug</p>\n<p>因此必須要小心設定。對了，這個設定值對CLI無效。</p>\n","site":{"data":{}},"excerpt":"<p>方便的在vc code透過xdebug進行php的偵錯<br>","more":"</p>\n<h3 id=\"執行環境\"><a href=\"#執行環境\" class=\"headerlink\" title=\"執行環境\"></a>執行環境</h3><p>ubuntu 14.04<br>nginx or apache or cli<br>visual studio code 1.14.1<br>php 5</p>\n<p>開發端與Server端不在同一台電腦。<br>php執行環境在遠端，vscode在本地，透過xdebug.remote功能，可以達到遠端debug的需求。</p>\n<h3 id=\"安裝xdebug\"><a href=\"#安裝xdebug\" class=\"headerlink\" title=\"安裝xdebug\"></a>安裝xdebug</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"># sudo apt-get install php5-xdebug</div></pre></td></tr></table></figure>\n<h3 id=\"設定xdebug-ini\"><a href=\"#設定xdebug-ini\" class=\"headerlink\" title=\"設定xdebug.ini\"></a>設定xdebug.ini</h3><p>編輯xdebug設定檔，加上remote相關資訊<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"># vim /etc/php5/mods-available/xdebug.ini</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">zend_extension = xdebug.so</div><div class=\"line\">xdebug.remote_enable = 1</div><div class=\"line\">xdebug.remote_autostart = 1</div><div class=\"line\">xdebug.remote_handler = dbgp</div><div class=\"line\">xdebug.remote_host = 172.17.0.1     ;指定vscode所在的IP</div><div class=\"line\">xdebug.remote_connect_back = 1      ;如果為1，則會忽略remote_host</div><div class=\"line\">xdebug.remote_port = 9000</div><div class=\"line\"></div><div class=\"line\">xdebug.remote_log = &quot;/var/log/xdebug.log&quot;</div></pre></td></tr></table></figure>\n<p>其中remote_host, remote_port要填vscode所在的IP與vscode開啟的port(後面會說明)</p>\n<p>remote_connect_back 如果設定為1，預設會將debug資訊拋往client，也就是任意開發端。</p>\n<p>只要是對server請求的client都可以得到xdebug_session進行debug</p>\n<p>因此必須要小心設定。對了，這個設定值對CLI無效。</p>"},{"title":"npm用法","date":"2017-04-24T09:30:38.000Z","_content":"有關npm各種用法\n\n<!-- more -->\n\n### 安裝特定套件\n如hexo\n```\nnpm install hexo\n```\n預設會將套件安裝在當下專案目錄的node_module底下\n\n### 安裝全域套件\n如果想要安裝在Global，讓其他專案也可以一起使用，或隨處都可以執行\n安裝時加上-g的參數即可\n```\nnpm install hexo -g\n```\n\n### 安裝並更新package.json\n安裝套件時同時更新package.json\n```\nnpm install hexo -save\n```\n\n### 依據Package.json安裝所需套件\n初始專案擁有packag.json時，可以直接透過install安裝所需目錄\n```\nnpm install\n```\n\n### 更新npm本身\n將npm更新到最新版本，而且加上-g就是安裝在全域的環境\n```\nnpm install npm@latest -g\n```","source":"_posts/npm用法.md","raw":"---\ntitle: npm用法\ndate: 2017-04-24 17:30:38\ntags:\n---\n有關npm各種用法\n\n<!-- more -->\n\n### 安裝特定套件\n如hexo\n```\nnpm install hexo\n```\n預設會將套件安裝在當下專案目錄的node_module底下\n\n### 安裝全域套件\n如果想要安裝在Global，讓其他專案也可以一起使用，或隨處都可以執行\n安裝時加上-g的參數即可\n```\nnpm install hexo -g\n```\n\n### 安裝並更新package.json\n安裝套件時同時更新package.json\n```\nnpm install hexo -save\n```\n\n### 依據Package.json安裝所需套件\n初始專案擁有packag.json時，可以直接透過install安裝所需目錄\n```\nnpm install\n```\n\n### 更新npm本身\n將npm更新到最新版本，而且加上-g就是安裝在全域的環境\n```\nnpm install npm@latest -g\n```","slug":"npm用法","published":1,"updated":"2017-07-12T01:05:34.120Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6q3570m0003qxb46z7qgq35","content":"<p>有關npm各種用法</p>\n<a id=\"more\"></a>\n<h3 id=\"安裝特定套件\"><a href=\"#安裝特定套件\" class=\"headerlink\" title=\"安裝特定套件\"></a>安裝特定套件</h3><p>如hexo<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo</div></pre></td></tr></table></figure></p>\n<p>預設會將套件安裝在當下專案目錄的node_module底下</p>\n<h3 id=\"安裝全域套件\"><a href=\"#安裝全域套件\" class=\"headerlink\" title=\"安裝全域套件\"></a>安裝全域套件</h3><p>如果想要安裝在Global，讓其他專案也可以一起使用，或隨處都可以執行<br>安裝時加上-g的參數即可<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo -g</div></pre></td></tr></table></figure></p>\n<h3 id=\"安裝並更新package-json\"><a href=\"#安裝並更新package-json\" class=\"headerlink\" title=\"安裝並更新package.json\"></a>安裝並更新package.json</h3><p>安裝套件時同時更新package.json<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo -save</div></pre></td></tr></table></figure></p>\n<h3 id=\"依據Package-json安裝所需套件\"><a href=\"#依據Package-json安裝所需套件\" class=\"headerlink\" title=\"依據Package.json安裝所需套件\"></a>依據Package.json安裝所需套件</h3><p>初始專案擁有packag.json時，可以直接透過install安裝所需目錄<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install</div></pre></td></tr></table></figure></p>\n<h3 id=\"更新npm本身\"><a href=\"#更新npm本身\" class=\"headerlink\" title=\"更新npm本身\"></a>更新npm本身</h3><p>將npm更新到最新版本，而且加上-g就是安裝在全域的環境<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install npm@latest -g</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>有關npm各種用法</p>","more":"<h3 id=\"安裝特定套件\"><a href=\"#安裝特定套件\" class=\"headerlink\" title=\"安裝特定套件\"></a>安裝特定套件</h3><p>如hexo<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo</div></pre></td></tr></table></figure></p>\n<p>預設會將套件安裝在當下專案目錄的node_module底下</p>\n<h3 id=\"安裝全域套件\"><a href=\"#安裝全域套件\" class=\"headerlink\" title=\"安裝全域套件\"></a>安裝全域套件</h3><p>如果想要安裝在Global，讓其他專案也可以一起使用，或隨處都可以執行<br>安裝時加上-g的參數即可<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo -g</div></pre></td></tr></table></figure></p>\n<h3 id=\"安裝並更新package-json\"><a href=\"#安裝並更新package-json\" class=\"headerlink\" title=\"安裝並更新package.json\"></a>安裝並更新package.json</h3><p>安裝套件時同時更新package.json<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo -save</div></pre></td></tr></table></figure></p>\n<h3 id=\"依據Package-json安裝所需套件\"><a href=\"#依據Package-json安裝所需套件\" class=\"headerlink\" title=\"依據Package.json安裝所需套件\"></a>依據Package.json安裝所需套件</h3><p>初始專案擁有packag.json時，可以直接透過install安裝所需目錄<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install</div></pre></td></tr></table></figure></p>\n<h3 id=\"更新npm本身\"><a href=\"#更新npm本身\" class=\"headerlink\" title=\"更新npm本身\"></a>更新npm本身</h3><p>將npm更新到最新版本，而且加上-g就是安裝在全域的環境<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install npm@latest -g</div></pre></td></tr></table></figure></p>"},{"title":"AngularJS學習筆記","date":"2016-05-16T09:49:33.000Z","_content":"\n### 取得其他controller的scope\n\n每個controller都有自己的$scope，如何取得其他ctrl的$scope呢？\n可以透過angular.element(\"jquery-selector\").scope();取得\n其中jqeuryselector就是我們常用的jquery語法\n這邊當然是要以尋找該對應ng-controller的tag為主\n找到後，就可以直接使用\n<!-- more -->\n### 手動更新特定$scope的畫面\n\n常用於非同步的callback, 無法自動觸發angular apply\n\n方法一：\n``` js\n$scope.value = 'newValue';\n$scope.$apply();\n```\n\n方法二：\n``` js\n$scope.$apply(function($_scope){\n  $_scope.value = 'newValue';\n});\n```","source":"_posts/AngularJS學習筆記.md","raw":"---\ntitle: AngularJS學習筆記\ndate: 2016-05-16 17:49:33\ntags:\n---\n\n### 取得其他controller的scope\n\n每個controller都有自己的$scope，如何取得其他ctrl的$scope呢？\n可以透過angular.element(\"jquery-selector\").scope();取得\n其中jqeuryselector就是我們常用的jquery語法\n這邊當然是要以尋找該對應ng-controller的tag為主\n找到後，就可以直接使用\n<!-- more -->\n### 手動更新特定$scope的畫面\n\n常用於非同步的callback, 無法自動觸發angular apply\n\n方法一：\n``` js\n$scope.value = 'newValue';\n$scope.$apply();\n```\n\n方法二：\n``` js\n$scope.$apply(function($_scope){\n  $_scope.value = 'newValue';\n});\n```","slug":"AngularJS學習筆記","published":1,"updated":"2017-04-13T07:31:01.094Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6q3570n0004qxb4yyj62924","content":"<h3 id=\"取得其他controller的scope\"><a href=\"#取得其他controller的scope\" class=\"headerlink\" title=\"取得其他controller的scope\"></a>取得其他controller的scope</h3><p>每個controller都有自己的$scope，如何取得其他ctrl的$scope呢？<br>可以透過angular.element(“jquery-selector”).scope();取得<br>其中jqeuryselector就是我們常用的jquery語法<br>這邊當然是要以尋找該對應ng-controller的tag為主<br>找到後，就可以直接使用<br><a id=\"more\"></a></p>\n<h3 id=\"手動更新特定-scope的畫面\"><a href=\"#手動更新特定-scope的畫面\" class=\"headerlink\" title=\"手動更新特定$scope的畫面\"></a>手動更新特定$scope的畫面</h3><p>常用於非同步的callback, 無法自動觸發angular apply</p>\n<p>方法一：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$scope.value = <span class=\"string\">'newValue'</span>;</div><div class=\"line\">$scope.$apply();</div></pre></td></tr></table></figure></p>\n<p>方法二：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$scope.$apply(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">$_scope</span>)</span>&#123;</div><div class=\"line\">  $_scope.value = <span class=\"string\">'newValue'</span>;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"取得其他controller的scope\"><a href=\"#取得其他controller的scope\" class=\"headerlink\" title=\"取得其他controller的scope\"></a>取得其他controller的scope</h3><p>每個controller都有自己的$scope，如何取得其他ctrl的$scope呢？<br>可以透過angular.element(“jquery-selector”).scope();取得<br>其中jqeuryselector就是我們常用的jquery語法<br>這邊當然是要以尋找該對應ng-controller的tag為主<br>找到後，就可以直接使用<br>","more":"</p>\n<h3 id=\"手動更新特定-scope的畫面\"><a href=\"#手動更新特定-scope的畫面\" class=\"headerlink\" title=\"手動更新特定$scope的畫面\"></a>手動更新特定$scope的畫面</h3><p>常用於非同步的callback, 無法自動觸發angular apply</p>\n<p>方法一：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$scope.value = <span class=\"string\">'newValue'</span>;</div><div class=\"line\">$scope.$apply();</div></pre></td></tr></table></figure></p>\n<p>方法二：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$scope.$apply(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">$_scope</span>)</span>&#123;</div><div class=\"line\">  $_scope.value = <span class=\"string\">'newValue'</span>;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>"},{"title":"Mongodb啟用問題","date":"2016-05-26T03:27:24.000Z","_content":"\n有時候不正常關機或不明原因導致mongoDB停止\n接著重新啟用mongoDB時，就叫不醒了\n但執行啟用mongoDB指令時，也沒有出現特別的錯誤，還跟你說啟用了!!?\n```\n$ sudo start mongod\n```\n> mongod start/running, process 1660\n> 看起來是啟用了阿~~~\n\n但察看網路服務狀況，仍然沒有出現mongoDB開啟的port\n```\n$ netstat -tpnl\n預設應該要有27017的port\n```\n<!-- more -->\n這時查看mongoDB的log就能清楚為什麼了\n\n``` bash\n$ more /var/log/mongodb/mongod.log\n```\n> I CONTROL  ***** SERVER RESTARTED *****\n> W -        [initandlisten] Detected unclean shutdown - <font color=\"red\">/var/lib/mongodb/mongod.lock is not empty.</font>\n> I STORAGE  [initandlisten] exception in initAndListen: 98 Unable to create/open lock file: /var/lib/mongodb/mongod.lock errno:13 Permission denied Is a mongod instance already running?, terminating\n> I CONTROL  [initandlisten] dbexit:  rc: 100\n\n可以看到`/var/lib/mongodb/mongod.lock`並沒有被清除，有可能是不正常停用的關係\n先把他清除試試看\n```\n$ sudo rm /var/lib/mongodb/mongod.lock\n```\n\n在重跑一次啟用指令\n```\n$ sudo start mongod\n```\n\n察看網路服務狀況\n```\n$ netstat -tpnl\n預設應該要有27017的port\n```\n\n如果仍然沒有，就在看一次mongoDB log\n```\n$ more /var/log/mongodb/mongod.log\n```\n> I CONTROL  ***** SERVER RESTARTED *****\n> E NETWORK  [initandlisten] <font color=\"red\">Failed to unlink socket file /tmp/mongodb-27017.sock</font> errno:1 Operation not permitted\n> I -        [initandlisten] Fatal Assertion 28578\n> I -        [initandlisten] \n\n這時候又有新的錯誤訊息，沒有權限去刪除`/tmp/mongodb-27017.sock`\n那一樣把他刪掉吧\n```\n$ sudo rm /tmp/mongodb-27017.sock\n```\n\n再試一次!\n```\n$ sudo start mongod\n```\n\n查看網路服務狀況\n```\n$ netstat -tpnl\n```\n預設應該要有27017的port, 應該就會有了!\n> (Not all processes could be identified, non-owned process info will not be shown, you would have to be root to see it all.)\n> Active Internet connections (only servers)\n> Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name\n> tcp        0      0 0.0.0.0:443             0.0.0.0:\\*               LISTEN      -\n> tcp        0      0 <font color=\"red\">127.0.0.1:27017</font>         0.0.0.0:\\*               LISTEN      -\n> tcp        0      0 0.0.0.0:389             0.0.0.0:\\*               LISTEN      -\n\n查看log\n```\n$ more /var/log/mongodb/mongod.log\n```\n> I CONTROL  ***** SERVER RESTARTED *****\n> I STORAGE  [initandlisten] wiredtiger_open config: ...\n> I CONTROL  [initandlisten] MongoDB starting : pid=1533 port=27017 dbpath=/var/lib/mongodb 64-bit host=ubuntu-mongodb\n> I CONTROL  [initandlisten] db version v3.0.2\n> I CONTROL  [initandlisten] git version: xx\n> I CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.0.1f 6 Jan 2014\n> I CONTROL  [initandlisten] build info: Linux \n> I CONTROL  [initandlisten] allocator: tcmalloc\n> I CONTROL  [initandlisten] options: { config: \"/etc/mongod.conf\", net: { bindIp: \"0.0.0.0\", port: 27017 }, processManagement: { fork: true }, storage: { dbPath: \"/var/lib/mongodb\", engine: \"wiredTiger\", journal: { enabled: true }, wiredTiger: { collectionConfig: { blockCompressor: \"snappy\" } } }, systemLog: { destination: \"file\", logAppend: true, path: \"/var/log/mongodb/mongod.log\" } }\n> I NETWORK  [initandlisten] <font color=\"red\">waiting for connections on port 27017</font>\n\n最後一行，在等待連線了，看來沒問題了！","source":"_posts/Mongodb啟用問題.md","raw":"---\ntitle: Mongodb啟用問題\ndate: 2016-05-26 11:27:24\ntags:\n---\n\n有時候不正常關機或不明原因導致mongoDB停止\n接著重新啟用mongoDB時，就叫不醒了\n但執行啟用mongoDB指令時，也沒有出現特別的錯誤，還跟你說啟用了!!?\n```\n$ sudo start mongod\n```\n> mongod start/running, process 1660\n> 看起來是啟用了阿~~~\n\n但察看網路服務狀況，仍然沒有出現mongoDB開啟的port\n```\n$ netstat -tpnl\n預設應該要有27017的port\n```\n<!-- more -->\n這時查看mongoDB的log就能清楚為什麼了\n\n``` bash\n$ more /var/log/mongodb/mongod.log\n```\n> I CONTROL  ***** SERVER RESTARTED *****\n> W -        [initandlisten] Detected unclean shutdown - <font color=\"red\">/var/lib/mongodb/mongod.lock is not empty.</font>\n> I STORAGE  [initandlisten] exception in initAndListen: 98 Unable to create/open lock file: /var/lib/mongodb/mongod.lock errno:13 Permission denied Is a mongod instance already running?, terminating\n> I CONTROL  [initandlisten] dbexit:  rc: 100\n\n可以看到`/var/lib/mongodb/mongod.lock`並沒有被清除，有可能是不正常停用的關係\n先把他清除試試看\n```\n$ sudo rm /var/lib/mongodb/mongod.lock\n```\n\n在重跑一次啟用指令\n```\n$ sudo start mongod\n```\n\n察看網路服務狀況\n```\n$ netstat -tpnl\n預設應該要有27017的port\n```\n\n如果仍然沒有，就在看一次mongoDB log\n```\n$ more /var/log/mongodb/mongod.log\n```\n> I CONTROL  ***** SERVER RESTARTED *****\n> E NETWORK  [initandlisten] <font color=\"red\">Failed to unlink socket file /tmp/mongodb-27017.sock</font> errno:1 Operation not permitted\n> I -        [initandlisten] Fatal Assertion 28578\n> I -        [initandlisten] \n\n這時候又有新的錯誤訊息，沒有權限去刪除`/tmp/mongodb-27017.sock`\n那一樣把他刪掉吧\n```\n$ sudo rm /tmp/mongodb-27017.sock\n```\n\n再試一次!\n```\n$ sudo start mongod\n```\n\n查看網路服務狀況\n```\n$ netstat -tpnl\n```\n預設應該要有27017的port, 應該就會有了!\n> (Not all processes could be identified, non-owned process info will not be shown, you would have to be root to see it all.)\n> Active Internet connections (only servers)\n> Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name\n> tcp        0      0 0.0.0.0:443             0.0.0.0:\\*               LISTEN      -\n> tcp        0      0 <font color=\"red\">127.0.0.1:27017</font>         0.0.0.0:\\*               LISTEN      -\n> tcp        0      0 0.0.0.0:389             0.0.0.0:\\*               LISTEN      -\n\n查看log\n```\n$ more /var/log/mongodb/mongod.log\n```\n> I CONTROL  ***** SERVER RESTARTED *****\n> I STORAGE  [initandlisten] wiredtiger_open config: ...\n> I CONTROL  [initandlisten] MongoDB starting : pid=1533 port=27017 dbpath=/var/lib/mongodb 64-bit host=ubuntu-mongodb\n> I CONTROL  [initandlisten] db version v3.0.2\n> I CONTROL  [initandlisten] git version: xx\n> I CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.0.1f 6 Jan 2014\n> I CONTROL  [initandlisten] build info: Linux \n> I CONTROL  [initandlisten] allocator: tcmalloc\n> I CONTROL  [initandlisten] options: { config: \"/etc/mongod.conf\", net: { bindIp: \"0.0.0.0\", port: 27017 }, processManagement: { fork: true }, storage: { dbPath: \"/var/lib/mongodb\", engine: \"wiredTiger\", journal: { enabled: true }, wiredTiger: { collectionConfig: { blockCompressor: \"snappy\" } } }, systemLog: { destination: \"file\", logAppend: true, path: \"/var/log/mongodb/mongod.log\" } }\n> I NETWORK  [initandlisten] <font color=\"red\">waiting for connections on port 27017</font>\n\n最後一行，在等待連線了，看來沒問題了！","slug":"Mongodb啟用問題","published":1,"updated":"2017-04-13T07:31:00.474Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6q3570o0005qxb458od3iz3","content":"<p>有時候不正常關機或不明原因導致mongoDB停止<br>接著重新啟用mongoDB時，就叫不醒了<br>但執行啟用mongoDB指令時，也沒有出現特別的錯誤，還跟你說啟用了!!?<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo start mongod</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>mongod start/running, process 1660<br>看起來是啟用了阿~~~</p>\n</blockquote>\n<p>但察看網路服務狀況，仍然沒有出現mongoDB開啟的port<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ netstat -tpnl</div><div class=\"line\">預設應該要有27017的port</div></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<p>這時查看mongoDB的log就能清楚為什麼了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ more /var/<span class=\"built_in\">log</span>/mongodb/mongod.log</div></pre></td></tr></table></figure>\n<blockquote>\n<p>I CONTROL  <strong>*</strong> SERVER RESTARTED <strong>*</strong><br>W -        [initandlisten] Detected unclean shutdown - <font color=\"red\">/var/lib/mongodb/mongod.lock is not empty.</font><br>I STORAGE  [initandlisten] exception in initAndListen: 98 Unable to create/open lock file: /var/lib/mongodb/mongod.lock errno:13 Permission denied Is a mongod instance already running?, terminating<br>I CONTROL  [initandlisten] dbexit:  rc: 100</p>\n</blockquote>\n<p>可以看到<code>/var/lib/mongodb/mongod.lock</code>並沒有被清除，有可能是不正常停用的關係<br>先把他清除試試看<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo rm /var/lib/mongodb/mongod.lock</div></pre></td></tr></table></figure></p>\n<p>在重跑一次啟用指令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo start mongod</div></pre></td></tr></table></figure></p>\n<p>察看網路服務狀況<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ netstat -tpnl</div><div class=\"line\">預設應該要有27017的port</div></pre></td></tr></table></figure></p>\n<p>如果仍然沒有，就在看一次mongoDB log<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ more /var/log/mongodb/mongod.log</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>I CONTROL  <strong>*</strong> SERVER RESTARTED <strong>*</strong><br>E NETWORK  [initandlisten] <font color=\"red\">Failed to unlink socket file /tmp/mongodb-27017.sock</font> errno:1 Operation not permitted<br>I -        [initandlisten] Fatal Assertion 28578<br>I -        [initandlisten] </p>\n</blockquote>\n<p>這時候又有新的錯誤訊息，沒有權限去刪除<code>/tmp/mongodb-27017.sock</code><br>那一樣把他刪掉吧<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo rm /tmp/mongodb-27017.sock</div></pre></td></tr></table></figure></p>\n<p>再試一次!<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo start mongod</div></pre></td></tr></table></figure></p>\n<p>查看網路服務狀況<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ netstat -tpnl</div></pre></td></tr></table></figure></p>\n<p>預設應該要有27017的port, 應該就會有了!</p>\n<blockquote>\n<p>(Not all processes could be identified, non-owned process info will not be shown, you would have to be root to see it all.)<br>Active Internet connections (only servers)<br>Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name<br>tcp        0      0 0.0.0.0:443             0.0.0.0:*               LISTEN      -<br>tcp        0      0 <font color=\"red\">127.0.0.1:27017</font>         0.0.0.0:*               LISTEN      -<br>tcp        0      0 0.0.0.0:389             0.0.0.0:*               LISTEN      -</p>\n</blockquote>\n<p>查看log<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ more /var/log/mongodb/mongod.log</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>I CONTROL  <strong>*</strong> SERVER RESTARTED <strong>*</strong><br>I STORAGE  [initandlisten] wiredtiger_open config: …<br>I CONTROL  [initandlisten] MongoDB starting : pid=1533 port=27017 dbpath=/var/lib/mongodb 64-bit host=ubuntu-mongodb<br>I CONTROL  [initandlisten] db version v3.0.2<br>I CONTROL  [initandlisten] git version: xx<br>I CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.0.1f 6 Jan 2014<br>I CONTROL  [initandlisten] build info: Linux<br>I CONTROL  [initandlisten] allocator: tcmalloc<br>I CONTROL  [initandlisten] options: { config: “/etc/mongod.conf”, net: { bindIp: “0.0.0.0”, port: 27017 }, processManagement: { fork: true }, storage: { dbPath: “/var/lib/mongodb”, engine: “wiredTiger”, journal: { enabled: true }, wiredTiger: { collectionConfig: { blockCompressor: “snappy” } } }, systemLog: { destination: “file”, logAppend: true, path: “/var/log/mongodb/mongod.log” } }<br>I NETWORK  [initandlisten] <font color=\"red\">waiting for connections on port 27017</font></p>\n</blockquote>\n<p>最後一行，在等待連線了，看來沒問題了！</p>\n","site":{"data":{}},"excerpt":"<p>有時候不正常關機或不明原因導致mongoDB停止<br>接著重新啟用mongoDB時，就叫不醒了<br>但執行啟用mongoDB指令時，也沒有出現特別的錯誤，還跟你說啟用了!!?<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo start mongod</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>mongod start/running, process 1660<br>看起來是啟用了阿~~~</p>\n</blockquote>\n<p>但察看網路服務狀況，仍然沒有出現mongoDB開啟的port<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ netstat -tpnl</div><div class=\"line\">預設應該要有27017的port</div></pre></td></tr></table></figure></p>","more":"<p>這時查看mongoDB的log就能清楚為什麼了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ more /var/<span class=\"built_in\">log</span>/mongodb/mongod.log</div></pre></td></tr></table></figure>\n<blockquote>\n<p>I CONTROL  <strong>*</strong> SERVER RESTARTED <strong>*</strong><br>W -        [initandlisten] Detected unclean shutdown - <font color=\"red\">/var/lib/mongodb/mongod.lock is not empty.</font><br>I STORAGE  [initandlisten] exception in initAndListen: 98 Unable to create/open lock file: /var/lib/mongodb/mongod.lock errno:13 Permission denied Is a mongod instance already running?, terminating<br>I CONTROL  [initandlisten] dbexit:  rc: 100</p>\n</blockquote>\n<p>可以看到<code>/var/lib/mongodb/mongod.lock</code>並沒有被清除，有可能是不正常停用的關係<br>先把他清除試試看<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo rm /var/lib/mongodb/mongod.lock</div></pre></td></tr></table></figure></p>\n<p>在重跑一次啟用指令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo start mongod</div></pre></td></tr></table></figure></p>\n<p>察看網路服務狀況<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ netstat -tpnl</div><div class=\"line\">預設應該要有27017的port</div></pre></td></tr></table></figure></p>\n<p>如果仍然沒有，就在看一次mongoDB log<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ more /var/log/mongodb/mongod.log</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>I CONTROL  <strong>*</strong> SERVER RESTARTED <strong>*</strong><br>E NETWORK  [initandlisten] <font color=\"red\">Failed to unlink socket file /tmp/mongodb-27017.sock</font> errno:1 Operation not permitted<br>I -        [initandlisten] Fatal Assertion 28578<br>I -        [initandlisten] </p>\n</blockquote>\n<p>這時候又有新的錯誤訊息，沒有權限去刪除<code>/tmp/mongodb-27017.sock</code><br>那一樣把他刪掉吧<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo rm /tmp/mongodb-27017.sock</div></pre></td></tr></table></figure></p>\n<p>再試一次!<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo start mongod</div></pre></td></tr></table></figure></p>\n<p>查看網路服務狀況<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ netstat -tpnl</div></pre></td></tr></table></figure></p>\n<p>預設應該要有27017的port, 應該就會有了!</p>\n<blockquote>\n<p>(Not all processes could be identified, non-owned process info will not be shown, you would have to be root to see it all.)<br>Active Internet connections (only servers)<br>Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name<br>tcp        0      0 0.0.0.0:443             0.0.0.0:*               LISTEN      -<br>tcp        0      0 <font color=\"red\">127.0.0.1:27017</font>         0.0.0.0:*               LISTEN      -<br>tcp        0      0 0.0.0.0:389             0.0.0.0:*               LISTEN      -</p>\n</blockquote>\n<p>查看log<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ more /var/log/mongodb/mongod.log</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>I CONTROL  <strong>*</strong> SERVER RESTARTED <strong>*</strong><br>I STORAGE  [initandlisten] wiredtiger_open config: …<br>I CONTROL  [initandlisten] MongoDB starting : pid=1533 port=27017 dbpath=/var/lib/mongodb 64-bit host=ubuntu-mongodb<br>I CONTROL  [initandlisten] db version v3.0.2<br>I CONTROL  [initandlisten] git version: xx<br>I CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.0.1f 6 Jan 2014<br>I CONTROL  [initandlisten] build info: Linux<br>I CONTROL  [initandlisten] allocator: tcmalloc<br>I CONTROL  [initandlisten] options: { config: “/etc/mongod.conf”, net: { bindIp: “0.0.0.0”, port: 27017 }, processManagement: { fork: true }, storage: { dbPath: “/var/lib/mongodb”, engine: “wiredTiger”, journal: { enabled: true }, wiredTiger: { collectionConfig: { blockCompressor: “snappy” } } }, systemLog: { destination: “file”, logAppend: true, path: “/var/log/mongodb/mongod.log” } }<br>I NETWORK  [initandlisten] <font color=\"red\">waiting for connections on port 27017</font></p>\n</blockquote>\n<p>最後一行，在等待連線了，看來沒問題了！</p>"},{"title":"利用ffmpeg指令影片轉檔與合併字幕","date":"2016-10-14T05:59:17.000Z","_content":"\n[mkv格式, 屬於matroska系列](https://zh.wikipedia.org/wiki/Matroska)支援單一檔案包含視訊與字幕功能\n透過ffmpeg指令將字幕封裝到影片檔(mkv格式)\n> 測試版本: [ffmpeg 2.7.1](https://www.johnvansickle.com/ffmpeg/) ubuntu 12.04\n``` bash\n$ ffmpeg -i sourceVideo.mkv -i sourceSubtitle.srt -c copy outputVideo.mkv\n```\n> -i: 輸入來源，可以多個輸入。同時支援輸入多個字幕檔。\n> -c: codec縮寫, 輸出的編碼格式codec採用複製模式copy, 輸出的影像格式與輸入相同。\n> 也可以使用-c:a copy 或 -c:v copy 表示針對audio 或 video作copy就好\n``` bash\n$ ffmpeg -i sourceVideo.mkv -i sourceSubtitle.srt -c:a copy -c:v copy outputVideo.mkv\n```\n\n\n因為不作視訊或音訊的轉換，也就不需花太久時間, 測試影片約為90min，實際合併字幕約花了35秒\n<!-- more -->\n執行後大致的樣子\n``` bash\nInput #0, matroska,webm, from 'sourceVideo.mkv':\n  Metadata:\n    creation_time   : 2014-11-05 23:58:38\n    encoder         : libebml v1.3.0 + libmatroska v1.4.1\n    TITLE           : EVO\n  Duration: 01:29:20.65, start: 0.000000, bitrate: 3688 kb/s\n    Chapter #0:0: start 0.000000, end 328.078000\n    Metadata:\n      title           : Chapter 1\n    Chapter #0:1: start 328.078000, end 520.062000\n    Metadata:\n      title           : Chapter 2\n..省略..\n    Stream #0:0(eng): Audio: ac3, 44100 Hz, stereo, fltp, 192 kb/s (default)\n    Stream #0:1(eng): Video: h264 (High), yuv420p(tv, bt709), 1280x534 [SAR 1:1 DAR 640:267], 23.98 fps, 23.98 tbr, 1k tbn, 180k tbc (default)\nInput #1, srt, from 'sourceSubtitle.srt':\n  Duration: N/A, bitrate: N/A\n    Stream #1:0: Subtitle: subrip\nOutput #0, matroska, to 'outputVideo.mkv':\n  Metadata:\n    TITLE           : EVO\n    encoder         : Lavf56.36.100\n    Chapter #0:0: start 0.000000, end 328.078000\n    Metadata:\n      title           : Chapter 1\n..省略..\n    Stream #0:0(eng): Video: h264 (H264 / 0x34363248), yuv420p, 1280x534 [SAR 1:1 DAR 640:267], q=2-31, 23.98 fps, 23.98 tbr, 1k tbn, 1k tbc (default)\n    Stream #0:1(eng): Audio: ac3 ([0] [0][0] / 0x2000), 44100 Hz, stereo, 192 kb/s (default)\n    Stream #0:2: Subtitle: subrip\nStream mapping:\n  Stream #0:1 -> #0:0 (copy)\n  Stream #0:0 -> #0:1 (copy)\n  Stream #1:0 -> #0:2 (copy)\nPress [q] to stop, [?] for help\nframe=128527 fps=2812 q=-1.0 Lsize= 2414245kB time=01:29:20.52 bitrate=3689.5kbits/s    \nvideo:2293132kB audio:119065kB subtitle:21kB other streams:0kB global headers:0kB muxing overhead: 0.084050%\n```\n\n上述加入字幕的方法是需要播放器支援字幕切換的，如VLC Player\n如果是無法選擇字幕的播放器(ex: browser player)，或mp4的格式, 可採用-vf 的方式\n(mp4也是可以類似mkv一樣加入一個字幕軌)\n\n> -vf \"subtitles=sourceSubtitle.srt\" 可將字幕直接寫入影片中，此時就無法在使用-c:v copy, 因為video的部份需要重新運算將字幕寫入\n``` bash\n$ ffmpeg -i sourceVideo.mp4 -vf \"subtitles=sourceSubtitle.srt\" outputVideo.mp4\n```\n> -vf \"subtitles=sourceSubtitle.srt:force_style='Fontsize=24'\" 如果覺得預設的字型太小，也可以透過額外的設定指定字幕大小\n``` bash\n$ ffmpeg -i sourceVideo.mp4 -vf \"subtitles=sourceSubtitle.srt:force_style='Fontsize=24'\" outputVideo.mp4\n```","source":"_posts/利用ffmpeg影片轉檔與合併字幕.md","raw":"---\ntitle: 利用ffmpeg指令影片轉檔與合併字幕\ndate: 2016-10-14 13:59:17\ntags:\n---\n\n[mkv格式, 屬於matroska系列](https://zh.wikipedia.org/wiki/Matroska)支援單一檔案包含視訊與字幕功能\n透過ffmpeg指令將字幕封裝到影片檔(mkv格式)\n> 測試版本: [ffmpeg 2.7.1](https://www.johnvansickle.com/ffmpeg/) ubuntu 12.04\n``` bash\n$ ffmpeg -i sourceVideo.mkv -i sourceSubtitle.srt -c copy outputVideo.mkv\n```\n> -i: 輸入來源，可以多個輸入。同時支援輸入多個字幕檔。\n> -c: codec縮寫, 輸出的編碼格式codec採用複製模式copy, 輸出的影像格式與輸入相同。\n> 也可以使用-c:a copy 或 -c:v copy 表示針對audio 或 video作copy就好\n``` bash\n$ ffmpeg -i sourceVideo.mkv -i sourceSubtitle.srt -c:a copy -c:v copy outputVideo.mkv\n```\n\n\n因為不作視訊或音訊的轉換，也就不需花太久時間, 測試影片約為90min，實際合併字幕約花了35秒\n<!-- more -->\n執行後大致的樣子\n``` bash\nInput #0, matroska,webm, from 'sourceVideo.mkv':\n  Metadata:\n    creation_time   : 2014-11-05 23:58:38\n    encoder         : libebml v1.3.0 + libmatroska v1.4.1\n    TITLE           : EVO\n  Duration: 01:29:20.65, start: 0.000000, bitrate: 3688 kb/s\n    Chapter #0:0: start 0.000000, end 328.078000\n    Metadata:\n      title           : Chapter 1\n    Chapter #0:1: start 328.078000, end 520.062000\n    Metadata:\n      title           : Chapter 2\n..省略..\n    Stream #0:0(eng): Audio: ac3, 44100 Hz, stereo, fltp, 192 kb/s (default)\n    Stream #0:1(eng): Video: h264 (High), yuv420p(tv, bt709), 1280x534 [SAR 1:1 DAR 640:267], 23.98 fps, 23.98 tbr, 1k tbn, 180k tbc (default)\nInput #1, srt, from 'sourceSubtitle.srt':\n  Duration: N/A, bitrate: N/A\n    Stream #1:0: Subtitle: subrip\nOutput #0, matroska, to 'outputVideo.mkv':\n  Metadata:\n    TITLE           : EVO\n    encoder         : Lavf56.36.100\n    Chapter #0:0: start 0.000000, end 328.078000\n    Metadata:\n      title           : Chapter 1\n..省略..\n    Stream #0:0(eng): Video: h264 (H264 / 0x34363248), yuv420p, 1280x534 [SAR 1:1 DAR 640:267], q=2-31, 23.98 fps, 23.98 tbr, 1k tbn, 1k tbc (default)\n    Stream #0:1(eng): Audio: ac3 ([0] [0][0] / 0x2000), 44100 Hz, stereo, 192 kb/s (default)\n    Stream #0:2: Subtitle: subrip\nStream mapping:\n  Stream #0:1 -> #0:0 (copy)\n  Stream #0:0 -> #0:1 (copy)\n  Stream #1:0 -> #0:2 (copy)\nPress [q] to stop, [?] for help\nframe=128527 fps=2812 q=-1.0 Lsize= 2414245kB time=01:29:20.52 bitrate=3689.5kbits/s    \nvideo:2293132kB audio:119065kB subtitle:21kB other streams:0kB global headers:0kB muxing overhead: 0.084050%\n```\n\n上述加入字幕的方法是需要播放器支援字幕切換的，如VLC Player\n如果是無法選擇字幕的播放器(ex: browser player)，或mp4的格式, 可採用-vf 的方式\n(mp4也是可以類似mkv一樣加入一個字幕軌)\n\n> -vf \"subtitles=sourceSubtitle.srt\" 可將字幕直接寫入影片中，此時就無法在使用-c:v copy, 因為video的部份需要重新運算將字幕寫入\n``` bash\n$ ffmpeg -i sourceVideo.mp4 -vf \"subtitles=sourceSubtitle.srt\" outputVideo.mp4\n```\n> -vf \"subtitles=sourceSubtitle.srt:force_style='Fontsize=24'\" 如果覺得預設的字型太小，也可以透過額外的設定指定字幕大小\n``` bash\n$ ffmpeg -i sourceVideo.mp4 -vf \"subtitles=sourceSubtitle.srt:force_style='Fontsize=24'\" outputVideo.mp4\n```","slug":"利用ffmpeg影片轉檔與合併字幕","published":1,"updated":"2017-04-13T07:31:00.986Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6q3570r0006qxb4aa2qkgg4","content":"<p><a href=\"https://zh.wikipedia.org/wiki/Matroska\" target=\"_blank\" rel=\"external\">mkv格式, 屬於matroska系列</a>支援單一檔案包含視訊與字幕功能<br>透過ffmpeg指令將字幕封裝到影片檔(mkv格式)</p>\n<blockquote>\n<p>測試版本: <a href=\"https://www.johnvansickle.com/ffmpeg/\" target=\"_blank\" rel=\"external\">ffmpeg 2.7.1</a> ubuntu 12.04<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ffmpeg -i <span class=\"built_in\">source</span>Video.mkv -i <span class=\"built_in\">source</span>Subtitle.srt -c copy outputVideo.mkv</div></pre></td></tr></table></figure></p>\n<p>-i: 輸入來源，可以多個輸入。同時支援輸入多個字幕檔。<br>-c: codec縮寫, 輸出的編碼格式codec採用複製模式copy, 輸出的影像格式與輸入相同。<br>也可以使用-c:a copy 或 -c:v copy 表示針對audio 或 video作copy就好<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ffmpeg -i <span class=\"built_in\">source</span>Video.mkv -i <span class=\"built_in\">source</span>Subtitle.srt -c:a copy -c:v copy outputVideo.mkv</div></pre></td></tr></table></figure></p>\n</blockquote>\n<p>因為不作視訊或音訊的轉換，也就不需花太久時間, 測試影片約為90min，實際合併字幕約花了35秒<br><a id=\"more\"></a><br>執行後大致的樣子<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\">Input <span class=\"comment\">#0, matroska,webm, from 'sourceVideo.mkv':</span></div><div class=\"line\">  Metadata:</div><div class=\"line\">    creation_time   : 2014-11-05 23:58:38</div><div class=\"line\">    encoder         : libebml v1.3.0 + libmatroska v1.4.1</div><div class=\"line\">    TITLE           : EVO</div><div class=\"line\">  Duration: 01:29:20.65, start: 0.000000, bitrate: 3688 kb/s</div><div class=\"line\">    Chapter <span class=\"comment\">#0:0: start 0.000000, end 328.078000</span></div><div class=\"line\">    Metadata:</div><div class=\"line\">      title           : Chapter 1</div><div class=\"line\">    Chapter <span class=\"comment\">#0:1: start 328.078000, end 520.062000</span></div><div class=\"line\">    Metadata:</div><div class=\"line\">      title           : Chapter 2</div><div class=\"line\">..省略..</div><div class=\"line\">    Stream <span class=\"comment\">#0:0(eng): Audio: ac3, 44100 Hz, stereo, fltp, 192 kb/s (default)</span></div><div class=\"line\">    Stream <span class=\"comment\">#0:1(eng): Video: h264 (High), yuv420p(tv, bt709), 1280x534 [SAR 1:1 DAR 640:267], 23.98 fps, 23.98 tbr, 1k tbn, 180k tbc (default)</span></div><div class=\"line\">Input <span class=\"comment\">#1, srt, from 'sourceSubtitle.srt':</span></div><div class=\"line\">  Duration: N/A, bitrate: N/A</div><div class=\"line\">    Stream <span class=\"comment\">#1:0: Subtitle: subrip</span></div><div class=\"line\">Output <span class=\"comment\">#0, matroska, to 'outputVideo.mkv':</span></div><div class=\"line\">  Metadata:</div><div class=\"line\">    TITLE           : EVO</div><div class=\"line\">    encoder         : Lavf56.36.100</div><div class=\"line\">    Chapter <span class=\"comment\">#0:0: start 0.000000, end 328.078000</span></div><div class=\"line\">    Metadata:</div><div class=\"line\">      title           : Chapter 1</div><div class=\"line\">..省略..</div><div class=\"line\">    Stream <span class=\"comment\">#0:0(eng): Video: h264 (H264 / 0x34363248), yuv420p, 1280x534 [SAR 1:1 DAR 640:267], q=2-31, 23.98 fps, 23.98 tbr, 1k tbn, 1k tbc (default)</span></div><div class=\"line\">    Stream <span class=\"comment\">#0:1(eng): Audio: ac3 ([0] [0][0] / 0x2000), 44100 Hz, stereo, 192 kb/s (default)</span></div><div class=\"line\">    Stream <span class=\"comment\">#0:2: Subtitle: subrip</span></div><div class=\"line\">Stream mapping:</div><div class=\"line\">  Stream <span class=\"comment\">#0:1 -&gt; #0:0 (copy)</span></div><div class=\"line\">  Stream <span class=\"comment\">#0:0 -&gt; #0:1 (copy)</span></div><div class=\"line\">  Stream <span class=\"comment\">#1:0 -&gt; #0:2 (copy)</span></div><div class=\"line\">Press [q] to stop, [?] <span class=\"keyword\">for</span> <span class=\"built_in\">help</span></div><div class=\"line\">frame=128527 fps=2812 q=-1.0 Lsize= 2414245kB time=01:29:20.52 bitrate=3689.5kbits/s    </div><div class=\"line\">video:2293132kB audio:119065kB subtitle:21kB other streams:0kB global headers:0kB muxing overhead: 0.084050%</div></pre></td></tr></table></figure></p>\n<p>上述加入字幕的方法是需要播放器支援字幕切換的，如VLC Player<br>如果是無法選擇字幕的播放器(ex: browser player)，或mp4的格式, 可採用-vf 的方式<br>(mp4也是可以類似mkv一樣加入一個字幕軌)</p>\n<blockquote>\n<p>-vf “subtitles=sourceSubtitle.srt” 可將字幕直接寫入影片中，此時就無法在使用-c:v copy, 因為video的部份需要重新運算將字幕寫入<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ffmpeg -i <span class=\"built_in\">source</span>Video.mp4 -vf <span class=\"string\">\"subtitles=sourceSubtitle.srt\"</span> outputVideo.mp4</div></pre></td></tr></table></figure></p>\n<p>-vf “subtitles=sourceSubtitle.srt:force_style=’Fontsize=24’” 如果覺得預設的字型太小，也可以透過額外的設定指定字幕大小<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ffmpeg -i <span class=\"built_in\">source</span>Video.mp4 -vf <span class=\"string\">\"subtitles=sourceSubtitle.srt:force_style='Fontsize=24'\"</span> outputVideo.mp4</div></pre></td></tr></table></figure></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p><a href=\"https://zh.wikipedia.org/wiki/Matroska\">mkv格式, 屬於matroska系列</a>支援單一檔案包含視訊與字幕功能<br>透過ffmpeg指令將字幕封裝到影片檔(mkv格式)</p>\n<blockquote>\n<p>測試版本: <a href=\"https://www.johnvansickle.com/ffmpeg/\">ffmpeg 2.7.1</a> ubuntu 12.04<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ffmpeg -i <span class=\"built_in\">source</span>Video.mkv -i <span class=\"built_in\">source</span>Subtitle.srt -c copy outputVideo.mkv</div></pre></td></tr></table></figure></p>\n<p>-i: 輸入來源，可以多個輸入。同時支援輸入多個字幕檔。<br>-c: codec縮寫, 輸出的編碼格式codec採用複製模式copy, 輸出的影像格式與輸入相同。<br>也可以使用-c:a copy 或 -c:v copy 表示針對audio 或 video作copy就好<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ffmpeg -i <span class=\"built_in\">source</span>Video.mkv -i <span class=\"built_in\">source</span>Subtitle.srt -c:a copy -c:v copy outputVideo.mkv</div></pre></td></tr></table></figure></p>\n</blockquote>\n<p>因為不作視訊或音訊的轉換，也就不需花太久時間, 測試影片約為90min，實際合併字幕約花了35秒<br>","more":"<br>執行後大致的樣子<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\">Input <span class=\"comment\">#0, matroska,webm, from 'sourceVideo.mkv':</span></div><div class=\"line\">  Metadata:</div><div class=\"line\">    creation_time   : 2014-11-05 23:58:38</div><div class=\"line\">    encoder         : libebml v1.3.0 + libmatroska v1.4.1</div><div class=\"line\">    TITLE           : EVO</div><div class=\"line\">  Duration: 01:29:20.65, start: 0.000000, bitrate: 3688 kb/s</div><div class=\"line\">    Chapter <span class=\"comment\">#0:0: start 0.000000, end 328.078000</span></div><div class=\"line\">    Metadata:</div><div class=\"line\">      title           : Chapter 1</div><div class=\"line\">    Chapter <span class=\"comment\">#0:1: start 328.078000, end 520.062000</span></div><div class=\"line\">    Metadata:</div><div class=\"line\">      title           : Chapter 2</div><div class=\"line\">..省略..</div><div class=\"line\">    Stream <span class=\"comment\">#0:0(eng): Audio: ac3, 44100 Hz, stereo, fltp, 192 kb/s (default)</span></div><div class=\"line\">    Stream <span class=\"comment\">#0:1(eng): Video: h264 (High), yuv420p(tv, bt709), 1280x534 [SAR 1:1 DAR 640:267], 23.98 fps, 23.98 tbr, 1k tbn, 180k tbc (default)</span></div><div class=\"line\">Input <span class=\"comment\">#1, srt, from 'sourceSubtitle.srt':</span></div><div class=\"line\">  Duration: N/A, bitrate: N/A</div><div class=\"line\">    Stream <span class=\"comment\">#1:0: Subtitle: subrip</span></div><div class=\"line\">Output <span class=\"comment\">#0, matroska, to 'outputVideo.mkv':</span></div><div class=\"line\">  Metadata:</div><div class=\"line\">    TITLE           : EVO</div><div class=\"line\">    encoder         : Lavf56.36.100</div><div class=\"line\">    Chapter <span class=\"comment\">#0:0: start 0.000000, end 328.078000</span></div><div class=\"line\">    Metadata:</div><div class=\"line\">      title           : Chapter 1</div><div class=\"line\">..省略..</div><div class=\"line\">    Stream <span class=\"comment\">#0:0(eng): Video: h264 (H264 / 0x34363248), yuv420p, 1280x534 [SAR 1:1 DAR 640:267], q=2-31, 23.98 fps, 23.98 tbr, 1k tbn, 1k tbc (default)</span></div><div class=\"line\">    Stream <span class=\"comment\">#0:1(eng): Audio: ac3 ([0] [0][0] / 0x2000), 44100 Hz, stereo, 192 kb/s (default)</span></div><div class=\"line\">    Stream <span class=\"comment\">#0:2: Subtitle: subrip</span></div><div class=\"line\">Stream mapping:</div><div class=\"line\">  Stream <span class=\"comment\">#0:1 -&gt; #0:0 (copy)</span></div><div class=\"line\">  Stream <span class=\"comment\">#0:0 -&gt; #0:1 (copy)</span></div><div class=\"line\">  Stream <span class=\"comment\">#1:0 -&gt; #0:2 (copy)</span></div><div class=\"line\">Press [q] to stop, [?] <span class=\"keyword\">for</span> <span class=\"built_in\">help</span></div><div class=\"line\">frame=128527 fps=2812 q=-1.0 Lsize= 2414245kB time=01:29:20.52 bitrate=3689.5kbits/s    </div><div class=\"line\">video:2293132kB audio:119065kB subtitle:21kB other streams:0kB global headers:0kB muxing overhead: 0.084050%</div></pre></td></tr></table></figure></p>\n<p>上述加入字幕的方法是需要播放器支援字幕切換的，如VLC Player<br>如果是無法選擇字幕的播放器(ex: browser player)，或mp4的格式, 可採用-vf 的方式<br>(mp4也是可以類似mkv一樣加入一個字幕軌)</p>\n<blockquote>\n<p>-vf “subtitles=sourceSubtitle.srt” 可將字幕直接寫入影片中，此時就無法在使用-c:v copy, 因為video的部份需要重新運算將字幕寫入<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ffmpeg -i <span class=\"built_in\">source</span>Video.mp4 -vf <span class=\"string\">\"subtitles=sourceSubtitle.srt\"</span> outputVideo.mp4</div></pre></td></tr></table></figure></p>\n<p>-vf “subtitles=sourceSubtitle.srt:force_style=’Fontsize=24’” 如果覺得預設的字型太小，也可以透過額外的設定指定字幕大小<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ffmpeg -i <span class=\"built_in\">source</span>Video.mp4 -vf <span class=\"string\">\"subtitles=sourceSubtitle.srt:force_style='Fontsize=24'\"</span> outputVideo.mp4</div></pre></td></tr></table></figure></p>\n</blockquote>"},{"title":"Ubuntu 14.04安裝ffmpeg","date":"2017-04-13T07:35:39.000Z","_content":"Ubuntu 14.04 版本已經不支援ffmpeg，由Libav取代\n想要安裝的話，需要手動執行一些步驟\n<!-- more -->\n如果使用一般安裝套件指令安裝ffmpeg時，會出現以下的錯誤\n\n``` bash\n$ sudo apt-get install ffmpeg\nReading package lists... Done\nBuilding dependency tree       \nReading state information... Done\nE: Unable to locate package mpeg\n```\n\n另外新增ppa套件來源\n``` bash\n$ sudo add-apt-repository ppa:mc3man/trusty-media\n```\n\n更新套件資訊\n``` bash\n$ sudo apt-get update\n```\n\n再跑一次就可以了\n``` bash\n$ sudo apt-get install ffmpeg\n```","source":"_posts/Ubuntu-14-04安裝ffmpeg.md","raw":"---\ntitle: Ubuntu 14.04安裝ffmpeg\ndate: 2017-04-13 15:35:39\ntags:\n---\nUbuntu 14.04 版本已經不支援ffmpeg，由Libav取代\n想要安裝的話，需要手動執行一些步驟\n<!-- more -->\n如果使用一般安裝套件指令安裝ffmpeg時，會出現以下的錯誤\n\n``` bash\n$ sudo apt-get install ffmpeg\nReading package lists... Done\nBuilding dependency tree       \nReading state information... Done\nE: Unable to locate package mpeg\n```\n\n另外新增ppa套件來源\n``` bash\n$ sudo add-apt-repository ppa:mc3man/trusty-media\n```\n\n更新套件資訊\n``` bash\n$ sudo apt-get update\n```\n\n再跑一次就可以了\n``` bash\n$ sudo apt-get install ffmpeg\n```","slug":"Ubuntu-14-04安裝ffmpeg","published":1,"updated":"2017-04-17T02:02:16.011Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6q3570t0007qxb495pjyhor","content":"<p>Ubuntu 14.04 版本已經不支援ffmpeg，由Libav取代<br>想要安裝的話，需要手動執行一些步驟<br><a id=\"more\"></a><br>如果使用一般安裝套件指令安裝ffmpeg時，會出現以下的錯誤</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo apt-get install ffmpeg</div><div class=\"line\">Reading package lists... Done</div><div class=\"line\">Building dependency tree       </div><div class=\"line\">Reading state information... Done</div><div class=\"line\">E: Unable to locate package mpeg</div></pre></td></tr></table></figure>\n<p>另外新增ppa套件來源<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo add-apt-repository ppa:mc3man/trusty-media</div></pre></td></tr></table></figure></p>\n<p>更新套件資訊<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo apt-get update</div></pre></td></tr></table></figure></p>\n<p>再跑一次就可以了<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo apt-get install ffmpeg</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>Ubuntu 14.04 版本已經不支援ffmpeg，由Libav取代<br>想要安裝的話，需要手動執行一些步驟<br>","more":"<br>如果使用一般安裝套件指令安裝ffmpeg時，會出現以下的錯誤</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo apt-get install ffmpeg</div><div class=\"line\">Reading package lists... Done</div><div class=\"line\">Building dependency tree       </div><div class=\"line\">Reading state information... Done</div><div class=\"line\">E: Unable to locate package mpeg</div></pre></td></tr></table></figure>\n<p>另外新增ppa套件來源<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo add-apt-repository ppa:mc3man/trusty-media</div></pre></td></tr></table></figure></p>\n<p>更新套件資訊<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo apt-get update</div></pre></td></tr></table></figure></p>\n<p>再跑一次就可以了<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo apt-get install ffmpeg</div></pre></td></tr></table></figure></p>"},{"title":"常用bash指令","date":"2016-05-13T06:04:43.000Z","_content":"\n### WGet\n\n``` bash\n$ wget -O- [url]\n```\n將wget取得的內容，直接轉往STUDSTO(pipe方式)\n\n\n``` bash\n$ .... | args wget -O a.zip\n```\n透過pipe取得wget的目標url, args可以將參數傳遞給wget\n<!-- more -->\n### grep\n\n``` bash\n$ grep -o \n```\n只顯示match的部份\n\n### cut\n\n``` bash\n$ cut -d \\\" -f 9\n```\n-d 利用\"符號分割字串為陣列，其中\\是跳脫字元\n-f 取得第九個元素，元素起始值為1\n\n### 檢查 IP 與主機名稱對應\n\n``` bash\n$ nslookup\n```","source":"_posts/常用bash指令.md","raw":"---\ntitle: 常用bash指令\ndate: 2016-05-13 14:04:43\ntags:\n---\n\n### WGet\n\n``` bash\n$ wget -O- [url]\n```\n將wget取得的內容，直接轉往STUDSTO(pipe方式)\n\n\n``` bash\n$ .... | args wget -O a.zip\n```\n透過pipe取得wget的目標url, args可以將參數傳遞給wget\n<!-- more -->\n### grep\n\n``` bash\n$ grep -o \n```\n只顯示match的部份\n\n### cut\n\n``` bash\n$ cut -d \\\" -f 9\n```\n-d 利用\"符號分割字串為陣列，其中\\是跳脫字元\n-f 取得第九個元素，元素起始值為1\n\n### 檢查 IP 與主機名稱對應\n\n``` bash\n$ nslookup\n```","slug":"常用bash指令","published":1,"updated":"2017-04-13T07:31:01.094Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6q3570w0008qxb4fede4be1","content":"<h3 id=\"WGet\"><a href=\"#WGet\" class=\"headerlink\" title=\"WGet\"></a>WGet</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ wget -O- [url]</div></pre></td></tr></table></figure>\n<p>將wget取得的內容，直接轉往STUDSTO(pipe方式)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ .... | args wget -O a.zip</div></pre></td></tr></table></figure>\n<p>透過pipe取得wget的目標url, args可以將參數傳遞給wget<br><a id=\"more\"></a></p>\n<h3 id=\"grep\"><a href=\"#grep\" class=\"headerlink\" title=\"grep\"></a>grep</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ grep -o</div></pre></td></tr></table></figure>\n<p>只顯示match的部份</p>\n<h3 id=\"cut\"><a href=\"#cut\" class=\"headerlink\" title=\"cut\"></a>cut</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cut <span class=\"_\">-d</span> \\<span class=\"string\">\" -f 9</span></div></pre></td></tr></table></figure>\n<p>-d 利用”符號分割字串為陣列，其中\\是跳脫字元<br>-f 取得第九個元素，元素起始值為1</p>\n<h3 id=\"檢查-IP-與主機名稱對應\"><a href=\"#檢查-IP-與主機名稱對應\" class=\"headerlink\" title=\"檢查 IP 與主機名稱對應\"></a>檢查 IP 與主機名稱對應</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ nslookup</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h3 id=\"WGet\"><a href=\"#WGet\" class=\"headerlink\" title=\"WGet\"></a>WGet</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ wget -O- [url]</div></pre></td></tr></table></figure>\n<p>將wget取得的內容，直接轉往STUDSTO(pipe方式)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ .... | args wget -O a.zip</div></pre></td></tr></table></figure>\n<p>透過pipe取得wget的目標url, args可以將參數傳遞給wget<br>","more":"</p>\n<h3 id=\"grep\"><a href=\"#grep\" class=\"headerlink\" title=\"grep\"></a>grep</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ grep -o</div></pre></td></tr></table></figure>\n<p>只顯示match的部份</p>\n<h3 id=\"cut\"><a href=\"#cut\" class=\"headerlink\" title=\"cut\"></a>cut</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cut <span class=\"_\">-d</span> \\<span class=\"string\">\" -f 9</span></div></pre></td></tr></table></figure>\n<p>-d 利用”符號分割字串為陣列，其中\\是跳脫字元<br>-f 取得第九個元素，元素起始值為1</p>\n<h3 id=\"檢查-IP-與主機名稱對應\"><a href=\"#檢查-IP-與主機名稱對應\" class=\"headerlink\" title=\"檢查 IP 與主機名稱對應\"></a>檢查 IP 與主機名稱對應</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ nslookup</div></pre></td></tr></table></figure>"},{"title":"在ubuntu利用mono執行C#程式","date":"2017-08-24T03:18:58.000Z","_content":"\n不需要微軟的環境就可以編譯與執行C#，真的蠻方便的\nmac(osx)也可以，但還沒實際試過\nmono在ubuntu安裝步驟挺簡單的，可以參考底下的Ref.\n<!-- more -->\n## 常用的指令\n### msbuild\n原本叫做xbuild，現在已經被廢除改用msbuild\n可以直接進入C#專案目錄，執行msbuild即可開始編譯\n```\n$ msbuild\n```\n也可以指定目錄作編譯\n```\n$ msbuild ./src/\n```\n\n### mcs\n就是個Complier，自己寫個簡單的.cs就可以在ubuntu環境下編譯為exe檔\n透過-r可以在編譯時加入需要的參照\n```\n$ mcs path/file.cs -out:file.exe -r:Newtonsoft.Json.dll -r:bin/any.dll\n```\n\n### mono\n執行exe檔的指令，很簡單的執行方式：\n```\n$ mono file.exe\n```\n預設執行時，會去尋找編譯時所參照的dll\n優先會去找跟exe檔同目錄的dll，沒有的話就會去找/usr/lib/底下，都沒有的話基本上就會報錯\n```\nUnhandled Exception:\nSystem.IO.FileNotFoundException: Could not load file or assembly 'any, Version=0.7.0.0, Culture=neutral, PublicKeyToken=null' or one of its dependencies.\nFile name: 'any, Version=0.7.0.0, Culture=neutral, PublicKeyToken=null'\n[ERROR] FATAL UNHANDLED EXCEPTION: System.IO.FileNotFoundException: Could not load file or assembly 'any, Version=0.7.0.0, Culture=neutral, PublicKeyToken=null' or one of its dependencies.\nFile name: 'any, Version=0.7.0.0, Culture=neutral, PublicKeyToken=null'\n```\n所以如果參照的dll跟exe並不在一起，就要透過環境變數path的方式來執行，例如參照DLL放在bin目錄下：\n```\n$ MONO_PATH=bin mono file.exe\n```\n\n另外，透過以下方式就知道實際執行時，mono的執行過程\n```\n$ MONO_LOG_LEVEL=debug mono file.exe\n```\n\n## Ref:\n- Mono Office Site \nhttp://www.mono-project.com/\n- 安裝mono可參考此篇文章，Compile and run C# in the Command Line (Linux, Mac & Windows) \nhttps://www.codetuts.tech/compile-c-sharp-command-line/\n- 透過環境變數加入參照執行mono\nDllNotFoundException or TypeLoadException\nhttps://brendanzagaeski.appspot.com/0013.html\n","source":"_posts/在ubuntu利用mono執行C-程式.md","raw":"---\ntitle: '在ubuntu利用mono執行C#程式'\ndate: 2017-08-24 11:18:58\ntags:\n---\n\n不需要微軟的環境就可以編譯與執行C#，真的蠻方便的\nmac(osx)也可以，但還沒實際試過\nmono在ubuntu安裝步驟挺簡單的，可以參考底下的Ref.\n<!-- more -->\n## 常用的指令\n### msbuild\n原本叫做xbuild，現在已經被廢除改用msbuild\n可以直接進入C#專案目錄，執行msbuild即可開始編譯\n```\n$ msbuild\n```\n也可以指定目錄作編譯\n```\n$ msbuild ./src/\n```\n\n### mcs\n就是個Complier，自己寫個簡單的.cs就可以在ubuntu環境下編譯為exe檔\n透過-r可以在編譯時加入需要的參照\n```\n$ mcs path/file.cs -out:file.exe -r:Newtonsoft.Json.dll -r:bin/any.dll\n```\n\n### mono\n執行exe檔的指令，很簡單的執行方式：\n```\n$ mono file.exe\n```\n預設執行時，會去尋找編譯時所參照的dll\n優先會去找跟exe檔同目錄的dll，沒有的話就會去找/usr/lib/底下，都沒有的話基本上就會報錯\n```\nUnhandled Exception:\nSystem.IO.FileNotFoundException: Could not load file or assembly 'any, Version=0.7.0.0, Culture=neutral, PublicKeyToken=null' or one of its dependencies.\nFile name: 'any, Version=0.7.0.0, Culture=neutral, PublicKeyToken=null'\n[ERROR] FATAL UNHANDLED EXCEPTION: System.IO.FileNotFoundException: Could not load file or assembly 'any, Version=0.7.0.0, Culture=neutral, PublicKeyToken=null' or one of its dependencies.\nFile name: 'any, Version=0.7.0.0, Culture=neutral, PublicKeyToken=null'\n```\n所以如果參照的dll跟exe並不在一起，就要透過環境變數path的方式來執行，例如參照DLL放在bin目錄下：\n```\n$ MONO_PATH=bin mono file.exe\n```\n\n另外，透過以下方式就知道實際執行時，mono的執行過程\n```\n$ MONO_LOG_LEVEL=debug mono file.exe\n```\n\n## Ref:\n- Mono Office Site \nhttp://www.mono-project.com/\n- 安裝mono可參考此篇文章，Compile and run C# in the Command Line (Linux, Mac & Windows) \nhttps://www.codetuts.tech/compile-c-sharp-command-line/\n- 透過環境變數加入參照執行mono\nDllNotFoundException or TypeLoadException\nhttps://brendanzagaeski.appspot.com/0013.html\n","slug":"在ubuntu利用mono執行C-程式","published":1,"updated":"2017-08-24T06:54:07.294Z","_id":"cj6q3570z0009qxb4bwuxynwx","comments":1,"layout":"post","photos":[],"link":"","content":"<p>不需要微軟的環境就可以編譯與執行C#，真的蠻方便的<br>mac(osx)也可以，但還沒實際試過<br>mono在ubuntu安裝步驟挺簡單的，可以參考底下的Ref.<br><a id=\"more\"></a></p>\n<h2 id=\"常用的指令\"><a href=\"#常用的指令\" class=\"headerlink\" title=\"常用的指令\"></a>常用的指令</h2><h3 id=\"msbuild\"><a href=\"#msbuild\" class=\"headerlink\" title=\"msbuild\"></a>msbuild</h3><p>原本叫做xbuild，現在已經被廢除改用msbuild<br>可以直接進入C#專案目錄，執行msbuild即可開始編譯<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ msbuild</div></pre></td></tr></table></figure></p>\n<p>也可以指定目錄作編譯<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ msbuild ./src/</div></pre></td></tr></table></figure></p>\n<h3 id=\"mcs\"><a href=\"#mcs\" class=\"headerlink\" title=\"mcs\"></a>mcs</h3><p>就是個Complier，自己寫個簡單的.cs就可以在ubuntu環境下編譯為exe檔<br>透過-r可以在編譯時加入需要的參照<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ mcs path/file.cs -out:file.exe -r:Newtonsoft.Json.dll -r:bin/any.dll</div></pre></td></tr></table></figure></p>\n<h3 id=\"mono\"><a href=\"#mono\" class=\"headerlink\" title=\"mono\"></a>mono</h3><p>執行exe檔的指令，很簡單的執行方式：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ mono file.exe</div></pre></td></tr></table></figure></p>\n<p>預設執行時，會去尋找編譯時所參照的dll<br>優先會去找跟exe檔同目錄的dll，沒有的話就會去找/usr/lib/底下，都沒有的話基本上就會報錯<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Unhandled Exception:</div><div class=\"line\">System.IO.FileNotFoundException: Could not load file or assembly &apos;any, Version=0.7.0.0, Culture=neutral, PublicKeyToken=null&apos; or one of its dependencies.</div><div class=\"line\">File name: &apos;any, Version=0.7.0.0, Culture=neutral, PublicKeyToken=null&apos;</div><div class=\"line\">[ERROR] FATAL UNHANDLED EXCEPTION: System.IO.FileNotFoundException: Could not load file or assembly &apos;any, Version=0.7.0.0, Culture=neutral, PublicKeyToken=null&apos; or one of its dependencies.</div><div class=\"line\">File name: &apos;any, Version=0.7.0.0, Culture=neutral, PublicKeyToken=null&apos;</div></pre></td></tr></table></figure></p>\n<p>所以如果參照的dll跟exe並不在一起，就要透過環境變數path的方式來執行，例如參照DLL放在bin目錄下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ MONO_PATH=bin mono file.exe</div></pre></td></tr></table></figure></p>\n<p>另外，透過以下方式就知道實際執行時，mono的執行過程<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ MONO_LOG_LEVEL=debug mono file.exe</div></pre></td></tr></table></figure></p>\n<h2 id=\"Ref\"><a href=\"#Ref\" class=\"headerlink\" title=\"Ref:\"></a>Ref:</h2><ul>\n<li>Mono Office Site<br><a href=\"http://www.mono-project.com/\" target=\"_blank\" rel=\"external\">http://www.mono-project.com/</a></li>\n<li>安裝mono可參考此篇文章，Compile and run C# in the Command Line (Linux, Mac &amp; Windows)<br><a href=\"https://www.codetuts.tech/compile-c-sharp-command-line/\" target=\"_blank\" rel=\"external\">https://www.codetuts.tech/compile-c-sharp-command-line/</a></li>\n<li>透過環境變數加入參照執行mono<br>DllNotFoundException or TypeLoadException<br><a href=\"https://brendanzagaeski.appspot.com/0013.html\" target=\"_blank\" rel=\"external\">https://brendanzagaeski.appspot.com/0013.html</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>不需要微軟的環境就可以編譯與執行C#，真的蠻方便的<br>mac(osx)也可以，但還沒實際試過<br>mono在ubuntu安裝步驟挺簡單的，可以參考底下的Ref.<br>","more":"</p>\n<h2 id=\"常用的指令\"><a href=\"#常用的指令\" class=\"headerlink\" title=\"常用的指令\"></a>常用的指令</h2><h3 id=\"msbuild\"><a href=\"#msbuild\" class=\"headerlink\" title=\"msbuild\"></a>msbuild</h3><p>原本叫做xbuild，現在已經被廢除改用msbuild<br>可以直接進入C#專案目錄，執行msbuild即可開始編譯<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ msbuild</div></pre></td></tr></table></figure></p>\n<p>也可以指定目錄作編譯<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ msbuild ./src/</div></pre></td></tr></table></figure></p>\n<h3 id=\"mcs\"><a href=\"#mcs\" class=\"headerlink\" title=\"mcs\"></a>mcs</h3><p>就是個Complier，自己寫個簡單的.cs就可以在ubuntu環境下編譯為exe檔<br>透過-r可以在編譯時加入需要的參照<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ mcs path/file.cs -out:file.exe -r:Newtonsoft.Json.dll -r:bin/any.dll</div></pre></td></tr></table></figure></p>\n<h3 id=\"mono\"><a href=\"#mono\" class=\"headerlink\" title=\"mono\"></a>mono</h3><p>執行exe檔的指令，很簡單的執行方式：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ mono file.exe</div></pre></td></tr></table></figure></p>\n<p>預設執行時，會去尋找編譯時所參照的dll<br>優先會去找跟exe檔同目錄的dll，沒有的話就會去找/usr/lib/底下，都沒有的話基本上就會報錯<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Unhandled Exception:</div><div class=\"line\">System.IO.FileNotFoundException: Could not load file or assembly &apos;any, Version=0.7.0.0, Culture=neutral, PublicKeyToken=null&apos; or one of its dependencies.</div><div class=\"line\">File name: &apos;any, Version=0.7.0.0, Culture=neutral, PublicKeyToken=null&apos;</div><div class=\"line\">[ERROR] FATAL UNHANDLED EXCEPTION: System.IO.FileNotFoundException: Could not load file or assembly &apos;any, Version=0.7.0.0, Culture=neutral, PublicKeyToken=null&apos; or one of its dependencies.</div><div class=\"line\">File name: &apos;any, Version=0.7.0.0, Culture=neutral, PublicKeyToken=null&apos;</div></pre></td></tr></table></figure></p>\n<p>所以如果參照的dll跟exe並不在一起，就要透過環境變數path的方式來執行，例如參照DLL放在bin目錄下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ MONO_PATH=bin mono file.exe</div></pre></td></tr></table></figure></p>\n<p>另外，透過以下方式就知道實際執行時，mono的執行過程<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ MONO_LOG_LEVEL=debug mono file.exe</div></pre></td></tr></table></figure></p>\n<h2 id=\"Ref\"><a href=\"#Ref\" class=\"headerlink\" title=\"Ref:\"></a>Ref:</h2><ul>\n<li>Mono Office Site<br><a href=\"http://www.mono-project.com/\">http://www.mono-project.com/</a></li>\n<li>安裝mono可參考此篇文章，Compile and run C# in the Command Line (Linux, Mac &amp; Windows)<br><a href=\"https://www.codetuts.tech/compile-c-sharp-command-line/\">https://www.codetuts.tech/compile-c-sharp-command-line/</a></li>\n<li>透過環境變數加入參照執行mono<br>DllNotFoundException or TypeLoadException<br><a href=\"https://brendanzagaeski.appspot.com/0013.html\">https://brendanzagaeski.appspot.com/0013.html</a></li>\n</ul>"},{"title":"查詢google AccessToken狀態","date":"2016-05-18T01:44:03.000Z","_content":"\n使用google API取得的Access Token，可以透過以下網址直接查詢對應的Info\n\n[https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=](https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=)\n\n\n### 正確的話會顯示\n\n```\n{\n  issued_to: \"99999999999.apps.googleusercontent.com\",\n  audience: \"\"99999999999.apps.googleusercontent.com\",\n  user_id: \"11106999999999999999999999\",\n  scope: \"https://www.googleapis.com/auth/plus.me\",\n  expires_in: 3504,\n  access_type: \"offline\"\n}\n```\n其中，expires_in是剩餘幾秒就會過期\n<!-- more -->\n### 失敗的話則會顯示\n\n```\n{\n  error: \"invalid_token\",\n  error_description: \"Invalid Value\"\n}\n```\n\n也可以查詢id token的info\n\n[https://www.googleapis.com/oauth2/v3/tokeninfo?id_token=](https://www.googleapis.com/oauth2/v3/tokeninfo?id_token=)\n\n預期回傳如下\n```\n{\n  iss: \"accounts.google.com\",\n  at_hash: \"qqqqqqqqqqqqqqqqqqqqqqqqqqq\",\n  aud: \"99999999999-99999999999.apps.googleusercontent.com\",\n  sub: \"99999999999\",\n  email_verified: \"true\",\n  azp: \"99999999999-99999999999.apps.googleusercontent.com\",\n  email: \"test@gmail.com\",\n  iat: \"1463550722\",\n  exp: \"1463554322\",\n  alg: \"RS256\",\n  kid: \"99999999999\"\n}\n```\n其中，sub其實就是google's userId\n\n如何透過線上工具直接取得access token呢？\n可以使用[oauthplayground](https://developers.google.com/oauthplayground/)\n\n","source":"_posts/查詢google-AccessToken狀態.md","raw":"---\ntitle: 查詢google AccessToken狀態\ndate: 2016-05-18 09:44:03\ntags:\n---\n\n使用google API取得的Access Token，可以透過以下網址直接查詢對應的Info\n\n[https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=](https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=)\n\n\n### 正確的話會顯示\n\n```\n{\n  issued_to: \"99999999999.apps.googleusercontent.com\",\n  audience: \"\"99999999999.apps.googleusercontent.com\",\n  user_id: \"11106999999999999999999999\",\n  scope: \"https://www.googleapis.com/auth/plus.me\",\n  expires_in: 3504,\n  access_type: \"offline\"\n}\n```\n其中，expires_in是剩餘幾秒就會過期\n<!-- more -->\n### 失敗的話則會顯示\n\n```\n{\n  error: \"invalid_token\",\n  error_description: \"Invalid Value\"\n}\n```\n\n也可以查詢id token的info\n\n[https://www.googleapis.com/oauth2/v3/tokeninfo?id_token=](https://www.googleapis.com/oauth2/v3/tokeninfo?id_token=)\n\n預期回傳如下\n```\n{\n  iss: \"accounts.google.com\",\n  at_hash: \"qqqqqqqqqqqqqqqqqqqqqqqqqqq\",\n  aud: \"99999999999-99999999999.apps.googleusercontent.com\",\n  sub: \"99999999999\",\n  email_verified: \"true\",\n  azp: \"99999999999-99999999999.apps.googleusercontent.com\",\n  email: \"test@gmail.com\",\n  iat: \"1463550722\",\n  exp: \"1463554322\",\n  alg: \"RS256\",\n  kid: \"99999999999\"\n}\n```\n其中，sub其實就是google's userId\n\n如何透過線上工具直接取得access token呢？\n可以使用[oauthplayground](https://developers.google.com/oauthplayground/)\n\n","slug":"查詢google-AccessToken狀態","published":1,"updated":"2017-04-13T07:31:00.474Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6q35711000aqxb4urdvtqaw","content":"<p>使用google API取得的Access Token，可以透過以下網址直接查詢對應的Info</p>\n<p><a href=\"https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=\" target=\"_blank\" rel=\"external\">https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=</a></p>\n<h3 id=\"正確的話會顯示\"><a href=\"#正確的話會顯示\" class=\"headerlink\" title=\"正確的話會顯示\"></a>正確的話會顯示</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  issued_to: &quot;99999999999.apps.googleusercontent.com&quot;,</div><div class=\"line\">  audience: &quot;&quot;99999999999.apps.googleusercontent.com&quot;,</div><div class=\"line\">  user_id: &quot;11106999999999999999999999&quot;,</div><div class=\"line\">  scope: &quot;https://www.googleapis.com/auth/plus.me&quot;,</div><div class=\"line\">  expires_in: 3504,</div><div class=\"line\">  access_type: &quot;offline&quot;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>其中，expires_in是剩餘幾秒就會過期<br><a id=\"more\"></a></p>\n<h3 id=\"失敗的話則會顯示\"><a href=\"#失敗的話則會顯示\" class=\"headerlink\" title=\"失敗的話則會顯示\"></a>失敗的話則會顯示</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  error: &quot;invalid_token&quot;,</div><div class=\"line\">  error_description: &quot;Invalid Value&quot;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>也可以查詢id token的info</p>\n<p><a href=\"https://www.googleapis.com/oauth2/v3/tokeninfo?id_token=\" target=\"_blank\" rel=\"external\">https://www.googleapis.com/oauth2/v3/tokeninfo?id_token=</a></p>\n<p>預期回傳如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  iss: &quot;accounts.google.com&quot;,</div><div class=\"line\">  at_hash: &quot;qqqqqqqqqqqqqqqqqqqqqqqqqqq&quot;,</div><div class=\"line\">  aud: &quot;99999999999-99999999999.apps.googleusercontent.com&quot;,</div><div class=\"line\">  sub: &quot;99999999999&quot;,</div><div class=\"line\">  email_verified: &quot;true&quot;,</div><div class=\"line\">  azp: &quot;99999999999-99999999999.apps.googleusercontent.com&quot;,</div><div class=\"line\">  email: &quot;test@gmail.com&quot;,</div><div class=\"line\">  iat: &quot;1463550722&quot;,</div><div class=\"line\">  exp: &quot;1463554322&quot;,</div><div class=\"line\">  alg: &quot;RS256&quot;,</div><div class=\"line\">  kid: &quot;99999999999&quot;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>其中，sub其實就是google’s userId</p>\n<p>如何透過線上工具直接取得access token呢？<br>可以使用<a href=\"https://developers.google.com/oauthplayground/\" target=\"_blank\" rel=\"external\">oauthplayground</a></p>\n","site":{"data":{}},"excerpt":"<p>使用google API取得的Access Token，可以透過以下網址直接查詢對應的Info</p>\n<p><a href=\"https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=\">https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=</a></p>\n<h3 id=\"正確的話會顯示\"><a href=\"#正確的話會顯示\" class=\"headerlink\" title=\"正確的話會顯示\"></a>正確的話會顯示</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  issued_to: &quot;99999999999.apps.googleusercontent.com&quot;,</div><div class=\"line\">  audience: &quot;&quot;99999999999.apps.googleusercontent.com&quot;,</div><div class=\"line\">  user_id: &quot;11106999999999999999999999&quot;,</div><div class=\"line\">  scope: &quot;https://www.googleapis.com/auth/plus.me&quot;,</div><div class=\"line\">  expires_in: 3504,</div><div class=\"line\">  access_type: &quot;offline&quot;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>其中，expires_in是剩餘幾秒就會過期<br>","more":"</p>\n<h3 id=\"失敗的話則會顯示\"><a href=\"#失敗的話則會顯示\" class=\"headerlink\" title=\"失敗的話則會顯示\"></a>失敗的話則會顯示</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  error: &quot;invalid_token&quot;,</div><div class=\"line\">  error_description: &quot;Invalid Value&quot;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>也可以查詢id token的info</p>\n<p><a href=\"https://www.googleapis.com/oauth2/v3/tokeninfo?id_token=\">https://www.googleapis.com/oauth2/v3/tokeninfo?id_token=</a></p>\n<p>預期回傳如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  iss: &quot;accounts.google.com&quot;,</div><div class=\"line\">  at_hash: &quot;qqqqqqqqqqqqqqqqqqqqqqqqqqq&quot;,</div><div class=\"line\">  aud: &quot;99999999999-99999999999.apps.googleusercontent.com&quot;,</div><div class=\"line\">  sub: &quot;99999999999&quot;,</div><div class=\"line\">  email_verified: &quot;true&quot;,</div><div class=\"line\">  azp: &quot;99999999999-99999999999.apps.googleusercontent.com&quot;,</div><div class=\"line\">  email: &quot;test@gmail.com&quot;,</div><div class=\"line\">  iat: &quot;1463550722&quot;,</div><div class=\"line\">  exp: &quot;1463554322&quot;,</div><div class=\"line\">  alg: &quot;RS256&quot;,</div><div class=\"line\">  kid: &quot;99999999999&quot;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>其中，sub其實就是google’s userId</p>\n<p>如何透過線上工具直接取得access token呢？<br>可以使用<a href=\"https://developers.google.com/oauthplayground/\">oauthplayground</a></p>"},{"title":"利用ffmpeg合併m3u8串流影片，並且轉成MP4格式","date":"2017-04-13T07:34:49.000Z","_content":"\n嘗試使用ffmpeg指令，下載m3u8來源的串流影片\nUbuntu 14.04 ffmpeg version git-2017-01-22\nffmpeg [安裝方式](http://shimeche.github.io/2017/04/13/Ubuntu-14-04%E5%AE%89%E8%A3%9Dffmpeg/)\n\n### 利用ffmpeg下載串流影片的使用方法\n```\nffmpeg -i \"m3u8網址\" -c copy media.mp4\n```\n透過-i指令，下載串流影片，網址最好用雙引號標示\n-c copy 告知影音編碼用複製就好，不需要再次轉碼\nfilename.mp4 使用mp4副檔名，直接告知存成mp4格式\n\n沒有ffmpeg的話，還有其他下載方法\n\n<!-- more -->\n### 透過wget下載cat合併\n在開啟影片前，先打開Chrome的 F12，才能觀看網路相關的網址\n會發現串流的網路連線狀態，依序下載串流影片\nmedia_00000_0.ts, media_00000_1.ts, media_00000_2.ts...其原理就是透過播放器組起來播放\n所以可以試著用wget指令，把每個網址存成檔案，接著在將它們合併起來，果真能播放！\n\n#### 一個一個抓\n``` bash\nwget http://.......media_00000_0.ts\nwget http://.......media_00000_1.ts\n.\n.\n.\nwget http://.......media_00000_3.ts\n```\n\n#### 透過bash批次抓\n``` bash\nfor i in `seq 1 210`;\ndo\n\twget \"http://.......media_00000_\"$i\".ts\"\n    sleep 2\ndone\n```\n\n接著合併\n可以透過cat一個一個合併，但是這樣會打到死\n``` bash\ncat media_00000_0.ts media_00000_1.ts (省略) media_00000_210.ts > media.ts\n```\n\n### 利用ffmpeg離線合併\n可以使用ffmpeg直接合併上述下載的分片檔案\n既然是串流播放，那麼就會有m3u8 list提供給播放器，當作串流依據\n所以只要找到這個檔案，接著在透過ffmpeg就可以合併了\n``` bash\nffmpeg -i media.m3u8 -c copy media.ts\nFile Type                       : M2T\nMIME Type                       : video/mpeg\nAudio Stream Type               : MPEG-2 AAC Audio\n```\n合併完後會是M2T的格式，是可以正常透過一般撥放器播放，也可以轉成mp4格式\n``` bash\nffmpeg -i media.ts -vcodec copy -acodec copy media.mp4\nFile Type                       : MP4\nMIME Type                       : video/mp4\nMajor Brand                     : MP4  Base Media v1 [IS0 14496-12:2003]\n```\n其實也可以直接將m3u8的url直接餵給ffmpeg，就自動下載與合併了 \n``` bash\nffmpeg -i \"http://......m3u8\" -c copy media.ts\n```\n這樣也可以，抓下來後，直接轉為mp4\n``` bash\nffmpeg -i \"http://......m3u8\" -c copy media.mp4\n```","source":"_posts/利用ffmpeg合併m3u8串流影片，並且轉成MP4格式.md","raw":"---\ntitle: 利用ffmpeg合併m3u8串流影片，並且轉成MP4格式\ndate: 2017-04-13 15:34:49\ntags:\n---\n\n嘗試使用ffmpeg指令，下載m3u8來源的串流影片\nUbuntu 14.04 ffmpeg version git-2017-01-22\nffmpeg [安裝方式](http://shimeche.github.io/2017/04/13/Ubuntu-14-04%E5%AE%89%E8%A3%9Dffmpeg/)\n\n### 利用ffmpeg下載串流影片的使用方法\n```\nffmpeg -i \"m3u8網址\" -c copy media.mp4\n```\n透過-i指令，下載串流影片，網址最好用雙引號標示\n-c copy 告知影音編碼用複製就好，不需要再次轉碼\nfilename.mp4 使用mp4副檔名，直接告知存成mp4格式\n\n沒有ffmpeg的話，還有其他下載方法\n\n<!-- more -->\n### 透過wget下載cat合併\n在開啟影片前，先打開Chrome的 F12，才能觀看網路相關的網址\n會發現串流的網路連線狀態，依序下載串流影片\nmedia_00000_0.ts, media_00000_1.ts, media_00000_2.ts...其原理就是透過播放器組起來播放\n所以可以試著用wget指令，把每個網址存成檔案，接著在將它們合併起來，果真能播放！\n\n#### 一個一個抓\n``` bash\nwget http://.......media_00000_0.ts\nwget http://.......media_00000_1.ts\n.\n.\n.\nwget http://.......media_00000_3.ts\n```\n\n#### 透過bash批次抓\n``` bash\nfor i in `seq 1 210`;\ndo\n\twget \"http://.......media_00000_\"$i\".ts\"\n    sleep 2\ndone\n```\n\n接著合併\n可以透過cat一個一個合併，但是這樣會打到死\n``` bash\ncat media_00000_0.ts media_00000_1.ts (省略) media_00000_210.ts > media.ts\n```\n\n### 利用ffmpeg離線合併\n可以使用ffmpeg直接合併上述下載的分片檔案\n既然是串流播放，那麼就會有m3u8 list提供給播放器，當作串流依據\n所以只要找到這個檔案，接著在透過ffmpeg就可以合併了\n``` bash\nffmpeg -i media.m3u8 -c copy media.ts\nFile Type                       : M2T\nMIME Type                       : video/mpeg\nAudio Stream Type               : MPEG-2 AAC Audio\n```\n合併完後會是M2T的格式，是可以正常透過一般撥放器播放，也可以轉成mp4格式\n``` bash\nffmpeg -i media.ts -vcodec copy -acodec copy media.mp4\nFile Type                       : MP4\nMIME Type                       : video/mp4\nMajor Brand                     : MP4  Base Media v1 [IS0 14496-12:2003]\n```\n其實也可以直接將m3u8的url直接餵給ffmpeg，就自動下載與合併了 \n``` bash\nffmpeg -i \"http://......m3u8\" -c copy media.ts\n```\n這樣也可以，抓下來後，直接轉為mp4\n``` bash\nffmpeg -i \"http://......m3u8\" -c copy media.mp4\n```","slug":"利用ffmpeg合併m3u8串流影片，並且轉成MP4格式","published":1,"updated":"2017-04-25T01:26:21.903Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6q35713000bqxb49vb2bnqr","content":"<p>嘗試使用ffmpeg指令，下載m3u8來源的串流影片<br>Ubuntu 14.04 ffmpeg version git-2017-01-22<br>ffmpeg <a href=\"http://shimeche.github.io/2017/04/13/Ubuntu-14-04%E5%AE%89%E8%A3%9Dffmpeg/\">安裝方式</a></p>\n<h3 id=\"利用ffmpeg下載串流影片的使用方法\"><a href=\"#利用ffmpeg下載串流影片的使用方法\" class=\"headerlink\" title=\"利用ffmpeg下載串流影片的使用方法\"></a>利用ffmpeg下載串流影片的使用方法</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ffmpeg -i &quot;m3u8網址&quot; -c copy media.mp4</div></pre></td></tr></table></figure>\n<p>透過-i指令，下載串流影片，網址最好用雙引號標示<br>-c copy 告知影音編碼用複製就好，不需要再次轉碼<br>filename.mp4 使用mp4副檔名，直接告知存成mp4格式</p>\n<p>沒有ffmpeg的話，還有其他下載方法</p>\n<a id=\"more\"></a>\n<h3 id=\"透過wget下載cat合併\"><a href=\"#透過wget下載cat合併\" class=\"headerlink\" title=\"透過wget下載cat合併\"></a>透過wget下載cat合併</h3><p>在開啟影片前，先打開Chrome的 F12，才能觀看網路相關的網址<br>會發現串流的網路連線狀態，依序下載串流影片<br>media_00000_0.ts, media_00000_1.ts, media_00000_2.ts…其原理就是透過播放器組起來播放<br>所以可以試著用wget指令，把每個網址存成檔案，接著在將它們合併起來，果真能播放！</p>\n<h4 id=\"一個一個抓\"><a href=\"#一個一個抓\" class=\"headerlink\" title=\"一個一個抓\"></a>一個一個抓</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://.......media_00000_0.ts</div><div class=\"line\">wget http://.......media_00000_1.ts</div><div class=\"line\">.</div><div class=\"line\">.</div><div class=\"line\">.</div><div class=\"line\">wget http://.......media_00000_3.ts</div></pre></td></tr></table></figure>\n<h4 id=\"透過bash批次抓\"><a href=\"#透過bash批次抓\" class=\"headerlink\" title=\"透過bash批次抓\"></a>透過bash批次抓</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> `seq 1 210`;</div><div class=\"line\"><span class=\"keyword\">do</span></div><div class=\"line\">\twget <span class=\"string\">\"http://.......media_00000_\"</span><span class=\"variable\">$i</span><span class=\"string\">\".ts\"</span></div><div class=\"line\">    sleep 2</div><div class=\"line\"><span class=\"keyword\">done</span></div></pre></td></tr></table></figure>\n<p>接著合併<br>可以透過cat一個一個合併，但是這樣會打到死<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cat media_00000_0.ts media_00000_1.ts (省略) media_00000_210.ts &gt; media.ts</div></pre></td></tr></table></figure></p>\n<h3 id=\"利用ffmpeg離線合併\"><a href=\"#利用ffmpeg離線合併\" class=\"headerlink\" title=\"利用ffmpeg離線合併\"></a>利用ffmpeg離線合併</h3><p>可以使用ffmpeg直接合併上述下載的分片檔案<br>既然是串流播放，那麼就會有m3u8 list提供給播放器，當作串流依據<br>所以只要找到這個檔案，接著在透過ffmpeg就可以合併了<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">ffmpeg -i media.m3u8 -c copy media.ts</div><div class=\"line\">File Type                       : M2T</div><div class=\"line\">MIME Type                       : video/mpeg</div><div class=\"line\">Audio Stream Type               : MPEG-2 AAC Audio</div></pre></td></tr></table></figure></p>\n<p>合併完後會是M2T的格式，是可以正常透過一般撥放器播放，也可以轉成mp4格式<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">ffmpeg -i media.ts -vcodec copy -acodec copy media.mp4</div><div class=\"line\">File Type                       : MP4</div><div class=\"line\">MIME Type                       : video/mp4</div><div class=\"line\">Major Brand                     : MP4  Base Media v1 [IS0 14496-12:2003]</div></pre></td></tr></table></figure></p>\n<p>其實也可以直接將m3u8的url直接餵給ffmpeg，就自動下載與合併了<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ffmpeg -i <span class=\"string\">\"http://......m3u8\"</span> -c copy media.ts</div></pre></td></tr></table></figure></p>\n<p>這樣也可以，抓下來後，直接轉為mp4<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ffmpeg -i <span class=\"string\">\"http://......m3u8\"</span> -c copy media.mp4</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>嘗試使用ffmpeg指令，下載m3u8來源的串流影片<br>Ubuntu 14.04 ffmpeg version git-2017-01-22<br>ffmpeg <a href=\"http://shimeche.github.io/2017/04/13/Ubuntu-14-04%E5%AE%89%E8%A3%9Dffmpeg/\">安裝方式</a></p>\n<h3 id=\"利用ffmpeg下載串流影片的使用方法\"><a href=\"#利用ffmpeg下載串流影片的使用方法\" class=\"headerlink\" title=\"利用ffmpeg下載串流影片的使用方法\"></a>利用ffmpeg下載串流影片的使用方法</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ffmpeg -i &quot;m3u8網址&quot; -c copy media.mp4</div></pre></td></tr></table></figure>\n<p>透過-i指令，下載串流影片，網址最好用雙引號標示<br>-c copy 告知影音編碼用複製就好，不需要再次轉碼<br>filename.mp4 使用mp4副檔名，直接告知存成mp4格式</p>\n<p>沒有ffmpeg的話，還有其他下載方法</p>","more":"<h3 id=\"透過wget下載cat合併\"><a href=\"#透過wget下載cat合併\" class=\"headerlink\" title=\"透過wget下載cat合併\"></a>透過wget下載cat合併</h3><p>在開啟影片前，先打開Chrome的 F12，才能觀看網路相關的網址<br>會發現串流的網路連線狀態，依序下載串流影片<br>media_00000_0.ts, media_00000_1.ts, media_00000_2.ts…其原理就是透過播放器組起來播放<br>所以可以試著用wget指令，把每個網址存成檔案，接著在將它們合併起來，果真能播放！</p>\n<h4 id=\"一個一個抓\"><a href=\"#一個一個抓\" class=\"headerlink\" title=\"一個一個抓\"></a>一個一個抓</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://.......media_00000_0.ts</div><div class=\"line\">wget http://.......media_00000_1.ts</div><div class=\"line\">.</div><div class=\"line\">.</div><div class=\"line\">.</div><div class=\"line\">wget http://.......media_00000_3.ts</div></pre></td></tr></table></figure>\n<h4 id=\"透過bash批次抓\"><a href=\"#透過bash批次抓\" class=\"headerlink\" title=\"透過bash批次抓\"></a>透過bash批次抓</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> `seq 1 210`;</div><div class=\"line\"><span class=\"keyword\">do</span></div><div class=\"line\">\twget <span class=\"string\">\"http://.......media_00000_\"</span><span class=\"variable\">$i</span><span class=\"string\">\".ts\"</span></div><div class=\"line\">    sleep 2</div><div class=\"line\"><span class=\"keyword\">done</span></div></pre></td></tr></table></figure>\n<p>接著合併<br>可以透過cat一個一個合併，但是這樣會打到死<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cat media_00000_0.ts media_00000_1.ts (省略) media_00000_210.ts &gt; media.ts</div></pre></td></tr></table></figure></p>\n<h3 id=\"利用ffmpeg離線合併\"><a href=\"#利用ffmpeg離線合併\" class=\"headerlink\" title=\"利用ffmpeg離線合併\"></a>利用ffmpeg離線合併</h3><p>可以使用ffmpeg直接合併上述下載的分片檔案<br>既然是串流播放，那麼就會有m3u8 list提供給播放器，當作串流依據<br>所以只要找到這個檔案，接著在透過ffmpeg就可以合併了<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">ffmpeg -i media.m3u8 -c copy media.ts</div><div class=\"line\">File Type                       : M2T</div><div class=\"line\">MIME Type                       : video/mpeg</div><div class=\"line\">Audio Stream Type               : MPEG-2 AAC Audio</div></pre></td></tr></table></figure></p>\n<p>合併完後會是M2T的格式，是可以正常透過一般撥放器播放，也可以轉成mp4格式<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">ffmpeg -i media.ts -vcodec copy -acodec copy media.mp4</div><div class=\"line\">File Type                       : MP4</div><div class=\"line\">MIME Type                       : video/mp4</div><div class=\"line\">Major Brand                     : MP4  Base Media v1 [IS0 14496-12:2003]</div></pre></td></tr></table></figure></p>\n<p>其實也可以直接將m3u8的url直接餵給ffmpeg，就自動下載與合併了<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ffmpeg -i <span class=\"string\">\"http://......m3u8\"</span> -c copy media.ts</div></pre></td></tr></table></figure></p>\n<p>這樣也可以，抓下來後，直接轉為mp4<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ffmpeg -i <span class=\"string\">\"http://......m3u8\"</span> -c copy media.mp4</div></pre></td></tr></table></figure></p>"},{"title":"使用mitmproxy快速建立並透過proxy監控http封包","date":"2017-04-19T03:01:42.000Z","_content":"想要查看iphone app的各種網路封包、連線的網址\n只要是http Request就可以透過mitmproxy獲得相關資訊\nhttps也可以，只需額外在iphone安裝mitmproxy憑證\n<!-- more -->\n\n### 安裝mitmproxy\nubuntu 14.04 透過apt只能安裝到0.9.2版\n```\nsudo apt-get install mitmproxy\n```\n\n目前github最新是2.0.x, 想要升級到該版本就需要比較[複雜的安裝步驟](http://docs.mitmproxy.org/en/stable/install.html#install-advanced)\n不過0.9.x版其實就不錯用了\n\n### 啟用mitmproxy\n``` bash`\nmitmproxy\n```\n預設使用的prot為8080\n{% asset_img mitmproxy_start.png 成功執行mitmproxy %}\n\n\n設定iphone wifi連線的proxy\n\n查看http網路連線資訊吧\n\n","source":"_posts/使用mitmproxy快速建立並透過proxy監控http封包.md","raw":"---\ntitle: 使用mitmproxy快速建立並透過proxy監控http封包\ndate: 2017-04-19 11:01:42\ntags:\n---\n想要查看iphone app的各種網路封包、連線的網址\n只要是http Request就可以透過mitmproxy獲得相關資訊\nhttps也可以，只需額外在iphone安裝mitmproxy憑證\n<!-- more -->\n\n### 安裝mitmproxy\nubuntu 14.04 透過apt只能安裝到0.9.2版\n```\nsudo apt-get install mitmproxy\n```\n\n目前github最新是2.0.x, 想要升級到該版本就需要比較[複雜的安裝步驟](http://docs.mitmproxy.org/en/stable/install.html#install-advanced)\n不過0.9.x版其實就不錯用了\n\n### 啟用mitmproxy\n``` bash`\nmitmproxy\n```\n預設使用的prot為8080\n{% asset_img mitmproxy_start.png 成功執行mitmproxy %}\n\n\n設定iphone wifi連線的proxy\n\n查看http網路連線資訊吧\n\n","slug":"使用mitmproxy快速建立並透過proxy監控http封包","published":1,"updated":"2017-04-20T01:26:31.664Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6q35716000cqxb4k33uvpof","content":"<p>想要查看iphone app的各種網路封包、連線的網址<br>只要是http Request就可以透過mitmproxy獲得相關資訊<br>https也可以，只需額外在iphone安裝mitmproxy憑證<br><a id=\"more\"></a></p>\n<h3 id=\"安裝mitmproxy\"><a href=\"#安裝mitmproxy\" class=\"headerlink\" title=\"安裝mitmproxy\"></a>安裝mitmproxy</h3><p>ubuntu 14.04 透過apt只能安裝到0.9.2版<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install mitmproxy</div></pre></td></tr></table></figure></p>\n<p>目前github最新是2.0.x, 想要升級到該版本就需要比較<a href=\"http://docs.mitmproxy.org/en/stable/install.html#install-advanced\" target=\"_blank\" rel=\"external\">複雜的安裝步驟</a><br>不過0.9.x版其實就不錯用了</p>\n<h3 id=\"啟用mitmproxy\"><a href=\"#啟用mitmproxy\" class=\"headerlink\" title=\"啟用mitmproxy\"></a>啟用mitmproxy</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mitmproxy</div></pre></td></tr></table></figure>\n<p>預設使用的prot為8080<br><img src=\"/2017/04/19/使用mitmproxy快速建立並透過proxy監控http封包/mitmproxy_start.png\" alt=\"成功執行mitmproxy\" title=\"成功執行mitmproxy\"></p>\n<p>設定iphone wifi連線的proxy</p>\n<p>查看http網路連線資訊吧</p>\n","site":{"data":{}},"excerpt":"<p>想要查看iphone app的各種網路封包、連線的網址<br>只要是http Request就可以透過mitmproxy獲得相關資訊<br>https也可以，只需額外在iphone安裝mitmproxy憑證<br>","more":"</p>\n<h3 id=\"安裝mitmproxy\"><a href=\"#安裝mitmproxy\" class=\"headerlink\" title=\"安裝mitmproxy\"></a>安裝mitmproxy</h3><p>ubuntu 14.04 透過apt只能安裝到0.9.2版<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install mitmproxy</div></pre></td></tr></table></figure></p>\n<p>目前github最新是2.0.x, 想要升級到該版本就需要比較<a href=\"http://docs.mitmproxy.org/en/stable/install.html#install-advanced\">複雜的安裝步驟</a><br>不過0.9.x版其實就不錯用了</p>\n<h3 id=\"啟用mitmproxy\"><a href=\"#啟用mitmproxy\" class=\"headerlink\" title=\"啟用mitmproxy\"></a>啟用mitmproxy</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mitmproxy</div></pre></td></tr></table></figure>\n<p>預設使用的prot為8080<br><img src=\"/2017/04/19/使用mitmproxy快速建立並透過proxy監控http封包/mitmproxy_start.png\" alt=\"成功執行mitmproxy\" title=\"成功執行mitmproxy\"></p>\n<p>設定iphone wifi連線的proxy</p>\n<p>查看http網路連線資訊吧</p>"},{"title":"超商咖啡價格分析","date":"2016-05-17T00:44:25.000Z","_content":"全家咖啡\n--------------\n\n#### UUPON活動(~2016/6/7)\n[會員專屬！兌換全家中熱拿鐵只要88點！](https://uupon.tw/activity/detail.do?id=20160412201247410383)\n> 88點活動：45/88=0.51元/點\n\n另外UUPON中，也有其他兌換現金折價卷的活動\n> 333點兌換100元抵用卷：100/333=0.3元/點\n> 67點兌換20元抵用卷：20/67=0.299元/點\n<!-- more -->\n如果拿來買目前的咖啡第二件七折活動\n以購買中熱拿為例，每杯45元\n活動優惠後\n> 45+45*0.7=76.5元，76.5/2=38.25元/杯\n\n如果是用100元抵用卷來買，則換算成點數需花費127.5點，可以買到一杯咖啡\n如果是用20元抵用卷來買，則換算成點數需花費127.9點，可以買到一杯咖啡\n再回來看原本的88點活動\n> 很明顯88點活動是最划算的！\n","source":"_posts/超商咖啡價格分析.md","raw":"---\ntitle: 超商咖啡價格分析\ndate: 2016-05-17 08:44:25\ntags:\n---\n全家咖啡\n--------------\n\n#### UUPON活動(~2016/6/7)\n[會員專屬！兌換全家中熱拿鐵只要88點！](https://uupon.tw/activity/detail.do?id=20160412201247410383)\n> 88點活動：45/88=0.51元/點\n\n另外UUPON中，也有其他兌換現金折價卷的活動\n> 333點兌換100元抵用卷：100/333=0.3元/點\n> 67點兌換20元抵用卷：20/67=0.299元/點\n<!-- more -->\n如果拿來買目前的咖啡第二件七折活動\n以購買中熱拿為例，每杯45元\n活動優惠後\n> 45+45*0.7=76.5元，76.5/2=38.25元/杯\n\n如果是用100元抵用卷來買，則換算成點數需花費127.5點，可以買到一杯咖啡\n如果是用20元抵用卷來買，則換算成點數需花費127.9點，可以買到一杯咖啡\n再回來看原本的88點活動\n> 很明顯88點活動是最划算的！\n","slug":"超商咖啡價格分析","published":1,"updated":"2017-04-13T07:31:00.218Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6q35718000dqxb4hxj0j5hn","content":"<h2 id=\"全家咖啡\"><a href=\"#全家咖啡\" class=\"headerlink\" title=\"全家咖啡\"></a>全家咖啡</h2><h4 id=\"UUPON活動-2016-6-7\"><a href=\"#UUPON活動-2016-6-7\" class=\"headerlink\" title=\"UUPON活動(~2016/6/7)\"></a>UUPON活動(~2016/6/7)</h4><p><a href=\"https://uupon.tw/activity/detail.do?id=20160412201247410383\" target=\"_blank\" rel=\"external\">會員專屬！兌換全家中熱拿鐵只要88點！</a></p>\n<blockquote>\n<p>88點活動：45/88=0.51元/點</p>\n</blockquote>\n<p>另外UUPON中，也有其他兌換現金折價卷的活動</p>\n<blockquote>\n<p>333點兌換100元抵用卷：100/333=0.3元/點<br>67點兌換20元抵用卷：20/67=0.299元/點<br><a id=\"more\"></a><br>如果拿來買目前的咖啡第二件七折活動<br>以購買中熱拿為例，每杯45元<br>活動優惠後<br>45+45*0.7=76.5元，76.5/2=38.25元/杯</p>\n</blockquote>\n<p>如果是用100元抵用卷來買，則換算成點數需花費127.5點，可以買到一杯咖啡<br>如果是用20元抵用卷來買，則換算成點數需花費127.9點，可以買到一杯咖啡<br>再回來看原本的88點活動</p>\n<blockquote>\n<p>很明顯88點活動是最划算的！</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h2 id=\"全家咖啡\"><a href=\"#全家咖啡\" class=\"headerlink\" title=\"全家咖啡\"></a>全家咖啡</h2><h4 id=\"UUPON活動-2016-6-7\"><a href=\"#UUPON活動-2016-6-7\" class=\"headerlink\" title=\"UUPON活動(~2016/6/7)\"></a>UUPON活動(~2016/6/7)</h4><p><a href=\"https://uupon.tw/activity/detail.do?id=20160412201247410383\">會員專屬！兌換全家中熱拿鐵只要88點！</a></p>\n<blockquote>\n<p>88點活動：45/88=0.51元/點</p>\n</blockquote>\n<p>另外UUPON中，也有其他兌換現金折價卷的活動</p>\n<blockquote>\n<p>333點兌換100元抵用卷：100/333=0.3元/點<br>67點兌換20元抵用卷：20/67=0.299元/點<br>","more":"<br>如果拿來買目前的咖啡第二件七折活動<br>以購買中熱拿為例，每杯45元<br>活動優惠後<br>45+45*0.7=76.5元，76.5/2=38.25元/杯</p>\n</blockquote>\n<p>如果是用100元抵用卷來買，則換算成點數需花費127.5點，可以買到一杯咖啡<br>如果是用20元抵用卷來買，則換算成點數需花費127.9點，可以買到一杯咖啡<br>再回來看原本的88點活動</p>\n<blockquote>\n<p>很明顯88點活動是最划算的！</p>\n</blockquote>"},{"title":"透過ngrok讓外網可以瀏覽本機服務","date":"2017-04-19T03:00:22.000Z","_content":"","source":"_posts/透過ngrok讓外網可以瀏覽本機服務.md","raw":"---\ntitle: 透過ngrok讓外網可以瀏覽本機服務\ndate: 2017-04-19 11:00:22\ntags:\n---\n","slug":"透過ngrok讓外網可以瀏覽本機服務","published":1,"updated":"2017-04-19T03:00:22.475Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6q35719000eqxb4fv31y7um","content":"","site":{"data":{}},"excerpt":"","more":""}],"PostAsset":[{"_id":"source/_posts/Hexo使用筆記/image/hexo-logo.png","slug":"image/hexo-logo.png","post":"cj6q357090000qxb4onczius4","modified":0,"renderable":0},{"_id":"source/_posts/使用mitmproxy快速建立並透過proxy監控http封包/mitmproxy_start.png","slug":"mitmproxy_start.png","post":"cj6q35716000cqxb4k33uvpof","modified":0,"renderable":0},{"_id":"source/_posts/Hexo使用筆記/hexo-logo.png","slug":"hexo-logo.png","post":"cj6q357090000qxb4onczius4","modified":0,"renderable":0}],"PostCategory":[],"PostTag":[],"Tag":[]}}